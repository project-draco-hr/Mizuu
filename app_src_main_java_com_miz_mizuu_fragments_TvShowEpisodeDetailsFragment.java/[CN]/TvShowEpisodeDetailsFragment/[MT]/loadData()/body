{
  mTitle.setVisibility(View.VISIBLE);
  mTitle.setText(mEpisode.getTitle());
  mTitle.setTypeface(mCondensedRegular);
  mDescription.setTypeface(mCondensedRegular);
  mFileSource.setTypeface(mCondensedRegular);
  mDirector.setTypeface(mCondensedRegular);
  mWriter.setTypeface(mCondensedRegular);
  mGuestStars.setTypeface(mCondensedRegular);
  mAirDate.setTypeface(mMedium);
  mRating.setTypeface(mMedium);
  mSeasonEpisodeNumber.setTypeface(mMediumItalic);
  mSeasonEpisodeNumber.setText(getString(R.string.showSeason) + " " + mEpisode.getSeason()+ ", "+ getString(R.string.showEpisode)+ " "+ mEpisode.getEpisode());
  if (!MizLib.isPortrait(getActivity())) {
    mDescription.setBackgroundResource(R.drawable.selectable_background);
    mDescription.setMaxLines(getActivity().getResources().getInteger(R.integer.episode_details_max_lines));
    mDescription.setTag(true);
    mDescription.setOnClickListener(new OnClickListener(){
      @Override public void onClick(      View v){
        if (((Boolean)mDescription.getTag())) {
          mDescription.setMaxLines(1000);
          mDescription.setTag(false);
        }
 else {
          mDescription.setMaxLines(getActivity().getResources().getInteger(R.integer.episode_details_max_lines));
          mDescription.setTag(true);
        }
      }
    }
);
    mDescription.setEllipsize(TextUtils.TruncateAt.END);
    mDescription.setFocusable(true);
  }
 else {
    if (MizLib.isTablet(getActivity()))     mDescription.setLineSpacing(0,1.15f);
  }
  mDescription.setText(mEpisode.getDescription());
  if (mShowFileLocation) {
    mFileSource.setText(mEpisode.getAllFilepaths());
  }
 else {
    mFileSource.setVisibility(View.GONE);
  }
  mAirDate.setText(MizLib.getPrettyDatePrecise(getActivity(),mEpisode.getReleasedate()));
  if (!mEpisode.getRating().equals("0.0")) {
    try {
      int rating=(int)(Double.parseDouble(mEpisode.getRating()) * 10);
      mRating.setText(Html.fromHtml(rating + "<small> %</small>"));
    }
 catch (    NumberFormatException e) {
      mRating.setText(mEpisode.getRating());
    }
  }
 else {
    mRating.setText(R.string.stringNA);
  }
  if (TextUtils.isEmpty(mEpisode.getDirector()) || mEpisode.getDirector().equals(getString(R.string.stringNA))) {
    mDirector.setVisibility(View.GONE);
  }
 else {
    mDirector.setText(mEpisode.getDirector());
  }
  if (TextUtils.isEmpty(mEpisode.getWriter()) || mEpisode.getWriter().equals(getString(R.string.stringNA))) {
    mWriter.setVisibility(View.GONE);
  }
 else {
    mWriter.setText(mEpisode.getWriter());
  }
  if (TextUtils.isEmpty(mEpisode.getGuestStars()) || mEpisode.getGuestStars().equals(getString(R.string.stringNA))) {
    mGuestStars.setVisibility(View.GONE);
  }
 else {
    mGuestStars.setText(mEpisode.getGuestStars());
  }
}
