{
  String imageUri=uri.toString();
  if (imageUri.startsWith("http")) {
    HttpURLConnection connection=openConnection(uri);
    connection.setUseCaches(true);
    if (localCacheOnly) {
      connection.setRequestProperty("Cache-Control","only-if-cached,max-age=" + Integer.MAX_VALUE);
    }
    int responseCode=connection.getResponseCode();
    if (responseCode >= 300) {
      connection.disconnect();
      throw new ResponseException(responseCode + " " + connection.getResponseMessage());
    }
    String responseSource=connection.getHeaderField(RESPONSE_SOURCE_OKHTTP);
    if (responseSource == null) {
      responseSource=connection.getHeaderField(RESPONSE_SOURCE_ANDROID);
    }
    long contentLength=connection.getHeaderFieldInt("Content-Length",-1);
    boolean fromCache=parseResponseSourceHeader(responseSource);
    return new Response(connection.getInputStream(),fromCache,contentLength);
  }
  ArrayList<Filepath> filepaths=new ArrayList<Filepath>();
  boolean ignoreNfo=PreferenceManager.getDefaultSharedPreferences(mContext).getBoolean(IGNORED_NFO_FILES,true);
  if (!ignoreNfo) {
    if (imageUri.contains("movie")) {
      String id=StringUtils.getMovieIdFromImagePath(imageUri);
      if (!TextUtils.isEmpty(id)) {
        ArrayList<String> strings=MizuuApplication.getMovieMappingAdapter().getMovieFilepaths(id);
        filepaths=new ArrayList<Filepath>();
        for (int i=0; i < strings.size(); i++)         filepaths.add(new Filepath(strings.get(i)));
        strings.clear();
      }
    }
 else     if (imageUri.contains("tvshows")) {
    }
    for (    Filepath path : filepaths) {
      String filename=path.getFilepath();
      if (path.getType() == FileSource.SMB) {
        if (!TextUtils.isEmpty(filename)) {
          SmbFile s=null;
          if (imageUri.contains("movie")) {
            if (imageUri.contains("movie-thumbs")) {
              s=MizLib.getCustomCoverArt(filename,MizLib.getAuthFromFilepath(MizLib.TYPE_MOVIE,imageUri),MizLib.COVER);
            }
 else {
              s=MizLib.getCustomCoverArt(filename,MizLib.getAuthFromFilepath(MizLib.TYPE_MOVIE,imageUri),MizLib.BACKDROP);
            }
            if (s != null)             return new Response(s.getInputStream(),localCacheOnly,s.getContentLength());
          }
        }
      }
 else       if (path.getType() == FileSource.FILE) {
        if (!TextUtils.isEmpty(filename)) {
          filename=filename.substring(0,filename.lastIndexOf(".")).replaceAll("part[1-9]|cd[1-9]","").trim();
          File parentFolder=new File(filename).getParentFile();
          if (parentFolder != null) {
            File[] list=parentFolder.listFiles();
            if (list != null) {
              String name, absolutePath;
              int count=list.length;
              if (imageUri.contains("movie")) {
                if (imageUri.contains("movie-thumbs")) {
                  for (int i=0; i < count; i++) {
                    name=list[i].getName();
                    absolutePath=list[i].getAbsolutePath();
                    if (name.equalsIgnoreCase("poster.jpg") || name.equalsIgnoreCase("poster.jpeg") || name.equalsIgnoreCase("poster.tbn")|| name.equalsIgnoreCase("folder.jpg")|| name.equalsIgnoreCase("folder.jpeg")|| name.equalsIgnoreCase("folder.tbn")|| name.equalsIgnoreCase("cover.jpg")|| name.equalsIgnoreCase("cover.jpeg")|| name.equalsIgnoreCase("cover.tbn")|| absolutePath.equalsIgnoreCase(filename + "-poster.jpg")|| absolutePath.equalsIgnoreCase(filename + "-poster.jpeg")|| absolutePath.equalsIgnoreCase(filename + "-poster.tbn")|| absolutePath.equalsIgnoreCase(filename + "-folder.jpg")|| absolutePath.equalsIgnoreCase(filename + "-folder.jpeg")|| absolutePath.equalsIgnoreCase(filename + "-folder.tbn")|| absolutePath.equalsIgnoreCase(filename + "-cover.jpg")|| absolutePath.equalsIgnoreCase(filename + "-cover.jpeg")|| absolutePath.equalsIgnoreCase(filename + "-cover.tbn")|| absolutePath.equalsIgnoreCase(filename + ".jpg")|| absolutePath.equalsIgnoreCase(filename + ".jpeg")|| absolutePath.equalsIgnoreCase(filename + ".tbn")) {
                      return new Response(new BufferedInputStream(new FileInputStream(list[i]),4096),localCacheOnly,list[i].length());
                    }
                  }
                }
 else {
                  for (int i=0; i < count; i++) {
                    name=list[i].getName();
                    absolutePath=list[i].getAbsolutePath();
                    if (name.equalsIgnoreCase("fanart.jpg") || name.equalsIgnoreCase("fanart.jpeg") || name.equalsIgnoreCase("fanart.tbn")|| name.equalsIgnoreCase("banner.jpg")|| name.equalsIgnoreCase("banner.jpeg")|| name.equalsIgnoreCase("banner.tbn")|| name.equalsIgnoreCase("backdrop.jpg")|| name.equalsIgnoreCase("backdrop.jpeg")|| name.equalsIgnoreCase("backdrop.tbn")|| absolutePath.equalsIgnoreCase(filename + "-fanart.jpg")|| absolutePath.equalsIgnoreCase(filename + "-fanart.jpeg")|| absolutePath.equalsIgnoreCase(filename + "-fanart.tbn")|| absolutePath.equalsIgnoreCase(filename + "-banner.jpg")|| absolutePath.equalsIgnoreCase(filename + "-banner.jpeg")|| absolutePath.equalsIgnoreCase(filename + "-banner.tbn")|| absolutePath.equalsIgnoreCase(filename + "-backdrop.jpg")|| absolutePath.equalsIgnoreCase(filename + "-backdrop.jpeg")|| absolutePath.equalsIgnoreCase(filename + "-backdrop.tbn")) {
                      return new Response(new BufferedInputStream(new FileInputStream(list[i]),4096),localCacheOnly,list[i].length());
                    }
                  }
                }
              }
 else {
              }
            }
          }
        }
      }
    }
  }
  File f=new File(imageUri);
  return new Response(new BufferedInputStream(new FileInputStream(f),4096),localCacheOnly,f.length());
}
