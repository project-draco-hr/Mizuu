{
  super.onCreate(savedInstanceState);
  MizuuApplication.setupTheme(this);
  setContentView(R.layout.menu_drawer);
  mPicasso=MizuuApplication.getPicasso(getApplicationContext());
  SharedPreferences settings=PreferenceManager.getDefaultSharedPreferences(this);
  mConfirmExit=settings.getBoolean(CONFIRM_BACK_PRESS,false);
  mStartup=Integer.valueOf(settings.getString(STARTUP_SELECTION,"1"));
  mDbHelper=MizuuApplication.getMovieAdapter();
  mDbHelperTv=MizuuApplication.getTvDbAdapter();
  mTfCondensed=MizuuApplication.getOrCreateTypeface(getApplicationContext(),"RobotoCondensed-Regular.ttf");
  mTfMedium=MizuuApplication.getOrCreateTypeface(getApplicationContext(),"Roboto-Medium.ttf");
  mTfLight=MizuuApplication.getOrCreateTypeface(getApplicationContext(),"Roboto-Light.ttf");
  setupMenuItems(true);
  mDrawerLayout=(DrawerLayout)findViewById(R.id.drawer_layout);
  mDrawerLayout.setDrawerShadow(R.drawable.drawer_list_shadow,GravityCompat.START);
  mDrawerList=(ListView)findViewById(R.id.listView1);
  mDrawerList.setAdapter(new MenuAdapter());
  mDrawerList.setOnItemClickListener(new OnItemClickListener(){
    @Override public void onItemClick(    AdapterView<?> arg0,    View arg1,    int arg2,    long arg3){
switch (mMenuItems.get(arg2).getType()) {
case MenuItem.SECTION:
        loadFragment(mMenuItems.get(arg2).getFragment());
      break;
case MenuItem.THIRD_PARTY_APP:
    final PackageManager pm=getPackageManager();
  Intent i=pm.getLaunchIntentForPackage(mMenuItems.get(arg2).getPackageName());
if (i != null) {
  i.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_NEW_TASK);
  startActivity(i);
}
break;
case MenuItem.SMALL_SECTION:
Intent smallIntent=new Intent(getApplicationContext(),Preferences.class);
if (mMenuItems.get(arg2).getIcon() == R.drawable.support_small) {
smallIntent.putExtra(PreferenceActivity.EXTRA_SHOW_FRAGMENT,ContactDeveloperFragment.class.getName());
smallIntent.putExtra(PreferenceActivity.EXTRA_NO_HEADERS,true);
smallIntent.putExtra(PreferenceActivity.EXTRA_SHOW_FRAGMENT_TITLE,getString(R.string.menuAboutContact));
smallIntent.putExtra(PreferenceActivity.EXTRA_SHOW_FRAGMENT_SHORT_TITLE,getString(R.string.menuAboutContact));
}
startActivity(smallIntent);
mDrawerLayout.closeDrawers();
break;
}
}
}
);
getActionBar().setDisplayHomeAsUpEnabled(true);
if (MizLib.hasICS()) getActionBar().setHomeButtonEnabled(true);
mDrawerToggle=new ActionBarDrawerToggle(this,mDrawerLayout,R.drawable.ic_drawer,R.string.drawer_open,R.string.drawer_close){
public void onDrawerClosed(View view){
getActionBar().setTitle(null);
invalidateOptionsMenu();
}
public void onDrawerOpened(View drawerView){
invalidateOptionsMenu();
if (MizLib.usesNavigationControl(getApplicationContext())) mDrawerList.requestFocus();
}
}
;
mDrawerLayout.setDrawerListener(mDrawerToggle);
if (savedInstanceState != null && savedInstanceState.containsKey("selectedIndex")) {
selectedIndex=savedInstanceState.getInt("selectedIndex");
loadFragment(selectedIndex);
}
 else if (getIntent().getExtras() != null && getIntent().getExtras().containsKey("startup")) {
loadFragment(Integer.parseInt(getIntent().getExtras().getString("startup")));
}
 else {
loadFragment(mStartup);
}
LocalBroadcastManager.getInstance(this).registerReceiver(mMessageReceiver,new IntentFilter(LocalBroadcastUtils.UPDATE_MOVIE_LIBRARY));
LocalBroadcastManager.getInstance(this).registerReceiver(mMessageReceiver,new IntentFilter(LocalBroadcastUtils.UPDATE_TV_SHOW_LIBRARY));
}
