{
  TMDbMovie movie=new TMDbMovie();
  DecryptedMovie dm=MizLib.decryptMovie(filepath,PreferenceManager.getDefaultSharedPreferences(mContext).getString(IGNORED_FILENAME_TAGS,""));
  if (dm.hasImdbId()) {
    try {
      JSONObject jObject=MizLib.getJSONObject("https://api.themoviedb.org/3/find/" + URLEncoder.encode(dm.getImdbId(),"utf-8") + "?api_key="+ mTmdbApiKey+ "&external_source=imdb_id"+ (includeAdult ? "&include_adult=true" : ""));
      if (jObject.getJSONArray("movie_results").length() > 0) {
        boolean match=false;
        for (int i=0; i < jObject.getJSONArray("movie_results").length(); i++) {
          if (!MizLib.isAdultContent(mContext,jObject.getJSONArray("movie_results").getJSONObject(0).getString("title")) && !MizLib.isAdultContent(mContext,jObject.getJSONArray("movie_results").getJSONObject(0).getString("original_title"))) {
            movie.setId(jObject.getJSONArray("movie_results").getJSONObject(0).getString("id"));
            match=true;
            break;
          }
        }
        if (!match)         movie.setId(DbAdapterMovies.UNIDENTIFIED_ID);
      }
 else       movie.setId(DbAdapterMovies.UNIDENTIFIED_ID);
    }
 catch (    Exception e) {
      movie.setId(DbAdapterMovies.UNIDENTIFIED_ID);
    }
  }
  if (movie.getId().equals(DbAdapterMovies.UNIDENTIFIED_ID) || movie.getId().isEmpty()) {
    try {
      JSONObject jObject=MizLib.getJSONObject("https://api.themoviedb.org/3/search/movie?query=" + URLEncoder.encode(query,"utf-8") + "&api_key="+ mTmdbApiKey+ (!TextUtils.isEmpty(year) ? "&year=" + year : "")+ (includeAdult ? "&include_adult=true" : ""));
      if (jObject.getJSONArray("results").length() > 0) {
        boolean match=false;
        for (int i=0; i < jObject.getJSONArray("results").length(); i++) {
          if (!MizLib.isAdultContent(mContext,jObject.getJSONArray("results").getJSONObject(0).getString("title")) && !MizLib.isAdultContent(mContext,jObject.getJSONArray("results").getJSONObject(0).getString("original_title"))) {
            movie.setId(jObject.getJSONArray("results").getJSONObject(0).getString("id"));
            match=true;
            break;
          }
        }
        if (!match)         movie.setId(DbAdapterMovies.UNIDENTIFIED_ID);
      }
 else       movie.setId(DbAdapterMovies.UNIDENTIFIED_ID);
    }
 catch (    Exception e) {
      movie.setId(DbAdapterMovies.UNIDENTIFIED_ID);
    }
  }
  if (!movie.getId().equals(DbAdapterMovies.UNIDENTIFIED_ID)) {
    movie=getMovie(movie.getId(),language);
  }
 else {
    if (!hasTriedFileNameOnce) {
      hasTriedFileNameOnce=true;
      movie=searchForMovie(query,"",filepath,language);
    }
 else {
      if (!hasTriedParent) {
        hasTriedParent=true;
        if (dm.hasParentName()) {
          movie=searchForMovie(dm.getDecryptedParentName(),dm.getParentNameYear(),filepath,language);
        }
      }
    }
  }
  return movie;
}
