{
  DbAdapterTvShowEpisode dbHelper=MizuuApplication.getTvEpisodeDbAdapter();
  Cursor cursor=dbHelper.getAllEpisodesInDatabase(ignoreRemovedFiles);
  while (cursor.moveToNext())   existingEpisodes.put(cursor.getString(cursor.getColumnIndex(DbAdapter.KEY_FILEPATH)),"");
  cursor.close();
  int count=storageDirectories.size();
  for (int i=0; i < count; i++) {
    if (storageDirectories.get(i).getFileSourceType() == FileSource.SMB) {
      if (MizLib.isOnline(getApplicationContext())) {
        try {
          MizFile storageDirectory=new MizFile(new SmbFile(MizLib.createSmbLoginString(URLEncoder.encode(storageDirectories.get(i).getDomain(),"utf-8"),URLEncoder.encode(storageDirectories.get(i).getUser(),"utf-8"),URLEncoder.encode(storageDirectories.get(i).getPassword(),"utf-8"),storageDirectories.get(i).getFilepath(),true)));
          if (storageDirectory.exists())           checkAllDirsAndFiles(storageDirectory);
        }
 catch (        MalformedURLException e) {
        }
catch (        UnsupportedEncodingException e) {
        }
      }
    }
 else {
      MizFile storageDirectory=new MizFile(new File(storageDirectories.get(i).getFilepath()));
      if (storageDirectory.exists())       checkAllDirsAndFiles(storageDirectory);
    }
  }
synchronized (uniqueVideos) {
    for (    MizFile f : uniqueVideos) {
      String decryptedShowname=MizLib.decryptEpisode(f.getAbsolutePath(),settings.getString("ignoredTags","")).getDecryptedFileName();
      if (map.get(decryptedShowname) == null)       map.put(decryptedShowname,new ArrayList<MizFile>());
      map.get(decryptedShowname).add(f);
    }
  }
  queue.addAll(map.keySet());
synchronized (uniqueVideos) {
    total=uniqueVideos.size();
  }
synchronized (uniqueVideos) {
    uniqueVideos.clear();
  }
  existingEpisodes.clear();
  if (queue.size() > 0) {
    updateNextShow();
  }
 else {
    mNotificationManager.cancel(NOTIFICATION_ID);
    sendUpdateBroadcast();
    stopSelf();
  }
}
