{
  super.onViewCreated(view,savedInstanceState);
  if (MizLib.isPortrait(getActivity())) {
    if (!MizLib.isTablet(getActivity()))     MizLib.addActionBarPaddingBottom(getActivity(),view.findViewById(R.id.scrollView1));
    mActionBarBackgroundDrawable=new GradientDrawable(GradientDrawable.Orientation.BOTTOM_TOP,new int[]{0x00000000,0xaa000000});
    getActivity().getActionBar().setBackgroundDrawable(mActionBarBackgroundDrawable);
    ObservableScrollView sv=(ObservableScrollView)view.findViewById(R.id.scrollView1);
    sv.setOnScrollChangedListener(new OnScrollChangedListener(){
      @Override public void onScrollChanged(      ScrollView who,      int l,      int t,      int oldl,      int oldt){
        final int headerHeight=view.findViewById(R.id.imageBackground).getHeight() - getActivity().getActionBar().getHeight();
        final float ratio=(float)Math.min(Math.max(t,0),headerHeight) / headerHeight;
        final int newAlpha=(int)(ratio * 255);
        mActionBarBackgroundDrawable=new GradientDrawable(GradientDrawable.Orientation.BOTTOM_TOP,new int[]{Color.parseColor("#" + ((Integer.toHexString(newAlpha).length() == 1) ? ("0" + Integer.toHexString(newAlpha)) : Integer.toHexString(newAlpha)) + "080808"),(newAlpha >= 170) ? Color.parseColor("#" + Integer.toHexString(newAlpha) + "080808") : 0xaa080808});
        getActivity().getActionBar().setBackgroundDrawable(mActionBarBackgroundDrawable);
      }
    }
);
  }
  background=(ImageView)view.findViewById(R.id.imageBackground);
  textTitle=(TextView)view.findViewById(R.id.movieTitle);
  textPlot=(TextView)view.findViewById(R.id.textView2);
  textSrc=(TextView)view.findViewById(R.id.textView3);
  textGenre=(TextView)view.findViewById(R.id.textView7);
  textRuntime=(TextView)view.findViewById(R.id.textView9);
  textReleaseDate=(TextView)view.findViewById(R.id.textReleaseDate);
  textRating=(TextView)view.findViewById(R.id.textView12);
  textTagline=(TextView)view.findViewById(R.id.textView6);
  textCertification=(TextView)view.findViewById(R.id.textView11);
  cover=(ImageView)view.findViewById(R.id.traktIcon);
  textTitle.setVisibility(View.VISIBLE);
  textTitle.setText(thisMovie.getTitle());
  textTitle.setTypeface(MizuuApplication.getOrCreateTypeface(getActivity(),"RobotoCondensed-Regular.ttf"));
  textTitle.setLayerType(View.LAYER_TYPE_SOFTWARE,null);
  textPlot.setTypeface(mLight);
  textSrc.setTypeface(mLight);
  textGenre.setTypeface(mLight);
  textRuntime.setTypeface(mLight);
  textReleaseDate.setTypeface(mLight);
  textRating.setTypeface(mLight);
  textCertification.setTypeface(mLight);
  textPlot.setText(thisMovie.getPlot());
  if (thisMovie.hasMultipleVersions() && !thisMovie.isUnidentified()) {
    String sources="";
    MovieVersion[] versions=thisMovie.getMultipleVersions();
    for (int i=0; i < versions.length; i++)     sources=sources + MizLib.transformSmbPath(versions[i].getFilepath()) + "\n\n";
    textSrc.setText(sources.trim());
  }
 else {
    textSrc.setText(thisMovie.getFilepath());
  }
  if (thisMovie.getTagline().equals("NOTAGLINE") || thisMovie.getTagline().isEmpty())   textTagline.setVisibility(TextView.GONE);
 else   textTagline.setText(thisMovie.getTagline());
  if (!MizLib.isEmpty(thisMovie.getGenres())) {
    textGenre.setText(thisMovie.getGenres());
  }
 else {
    textGenre.setText(R.string.stringNA);
  }
  try {
    int hours=Integer.parseInt(thisMovie.getRuntime()) / 60;
    int minutes=Integer.parseInt(thisMovie.getRuntime()) % 60;
    String hours_string=hours + " " + getResources().getQuantityString(R.plurals.hour,hours,hours);
    String minutes_string=minutes + " " + getResources().getQuantityString(R.plurals.minute,minutes,minutes);
    if (hours > 0) {
      if (minutes == 0)       textRuntime.setText(hours_string);
 else       textRuntime.setText(hours_string + " " + minutes_string);
    }
 else {
      textRuntime.setText(minutes_string);
    }
  }
 catch (  Exception e) {
    if (!MizLib.isEmpty(thisMovie.getRuntime())) {
      textRuntime.setText(thisMovie.getRuntime());
    }
 else {
      textRuntime.setText(R.string.stringNA);
    }
  }
  if (!MizLib.isEmpty(thisMovie.getReleasedate())) {
    try {
      String[] date=thisMovie.getReleasedate().split("-");
      Calendar cal=Calendar.getInstance();
      cal.set(Integer.parseInt(date[0]),Integer.parseInt(date[1]) - 1,Integer.parseInt(date[2]));
      textReleaseDate.setText(DateFormat.getDateInstance(DateFormat.MEDIUM,Locale.getDefault()).format(cal.getTime()));
    }
 catch (    Exception e) {
      textReleaseDate.setText(thisMovie.getReleasedate());
    }
  }
 else {
    textReleaseDate.setText(R.string.stringNA);
  }
  if (!thisMovie.getRating().equals("0.0/10")) {
    if (thisMovie.getRating().contains("/")) {
      try {
        int rating=(int)(Double.parseDouble(thisMovie.getRating().substring(0,thisMovie.getRating().indexOf("/"))) * 10);
        textRating.setText(Html.fromHtml(rating + "<small> %</small>"));
      }
 catch (      NumberFormatException e) {
        textRating.setText(Html.fromHtml(thisMovie.getRating().replace("/","<small> / ") + "</small>"));
      }
    }
 else {
      textRating.setText(thisMovie.getRating());
    }
  }
 else {
    textRating.setText(R.string.stringNA);
  }
  if (!MizLib.isEmpty(thisMovie.getCertification())) {
    textCertification.setText(thisMovie.getCertification());
  }
 else {
    textCertification.setText(R.string.stringNA);
  }
  loadImages();
}
