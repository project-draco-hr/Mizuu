{
  super.onViewCreated(view,savedInstanceState);
  background=(ImageView)view.findViewById(R.id.imageBackground);
  textTitle=(TextView)view.findViewById(R.id.movieTitle);
  textPlot=(TextView)view.findViewById(R.id.textView2);
  textSrc=(TextView)view.findViewById(R.id.textView3);
  textGenre=(TextView)view.findViewById(R.id.textView7);
  textRuntime=(TextView)view.findViewById(R.id.textView9);
  textReleaseDate=(TextView)view.findViewById(R.id.textReleaseDate);
  textRating=(TextView)view.findViewById(R.id.textView12);
  textTagline=(TextView)view.findViewById(R.id.textView6);
  textCertification=(TextView)view.findViewById(R.id.textView11);
  cover=(ImageView)view.findViewById(R.id.traktIcon);
  textTitle.setVisibility(View.VISIBLE);
  textTitle.setText(thisMovie.getTitle());
  textTitle.setTypeface(MizuuApplication.getOrCreateTypeface(getActivity(),"RobotoCondensed-Regular.ttf"));
  textTitle.setLayerType(View.LAYER_TYPE_SOFTWARE,null);
  textPlot.setTypeface(mLight);
  textSrc.setTypeface(mLight);
  textGenre.setTypeface(mLight);
  textRuntime.setTypeface(mLight);
  textReleaseDate.setTypeface(mLight);
  textRating.setTypeface(mLight);
  textCertification.setTypeface(mLight);
  if (!MizLib.isPortrait(getActivity())) {
    textPlot.setBackgroundResource(R.drawable.selectable_background);
    if (!thisMovie.getTagline().isEmpty())     textPlot.setMaxLines(getActivity().getResources().getInteger(R.integer.movie_details_max_lines));
 else     textPlot.setMaxLines(getActivity().getResources().getInteger(R.integer.show_details_max_lines));
    textPlot.setTag(true);
    textPlot.setOnClickListener(new OnClickListener(){
      @Override public void onClick(      View v){
        if (((Boolean)textPlot.getTag())) {
          textPlot.setMaxLines(1000);
          textPlot.setTag(false);
        }
 else {
          if (!thisMovie.getTagline().isEmpty())           textPlot.setMaxLines(getActivity().getResources().getInteger(R.integer.movie_details_max_lines));
 else           textPlot.setMaxLines(getActivity().getResources().getInteger(R.integer.show_details_max_lines));
          textPlot.setTag(true);
        }
      }
    }
);
    textPlot.setEllipsize(TextUtils.TruncateAt.END);
    textPlot.setFocusable(true);
  }
 else {
    if (MizLib.isTablet(getActivity()))     textPlot.setLineSpacing(0,1.15f);
  }
  textPlot.setText(thisMovie.getPlot());
  if (mShowFileLocation) {
    if (thisMovie.hasMultipleVersions() && !thisMovie.isUnidentified()) {
      StringBuilder sb=new StringBuilder();
      MovieVersion[] versions=thisMovie.getMultipleVersions();
      for (int i=0; i < versions.length; i++)       sb.append(MizLib.transformSmbPath(versions[i].getFilepath()) + "\n");
      textSrc.setText(sb.toString().trim());
    }
 else {
      textSrc.setText(thisMovie.getFilepath());
    }
  }
 else {
    textSrc.setVisibility(View.GONE);
  }
  textTagline.setTypeface(mBoldItalic);
  if (thisMovie.getTagline().isEmpty())   textTagline.setVisibility(TextView.GONE);
 else   textTagline.setText(thisMovie.getTagline());
  textGenre.setTypeface(mLightItalic);
  if (!MizLib.isEmpty(thisMovie.getGenres())) {
    textGenre.setText(thisMovie.getGenres());
  }
 else {
    textGenre.setVisibility(View.GONE);
  }
  textRuntime.setText(MizLib.getPrettyRuntime(getActivity(),Integer.parseInt(thisMovie.getRuntime())));
  textReleaseDate.setTypeface(mMedium);
  textReleaseDate.setText(MizLib.getPrettyDate(getActivity(),thisMovie.getReleasedate()));
  if (!thisMovie.getRating().equals("0.0/10")) {
    if (thisMovie.getRating().contains("/")) {
      try {
        int rating=(int)(Double.parseDouble(thisMovie.getRating().substring(0,thisMovie.getRating().indexOf("/"))) * 10);
        textRating.setText(Html.fromHtml("<b>" + rating + "</b><small> %</small>"));
      }
 catch (      NumberFormatException e) {
        textRating.setText(Html.fromHtml(thisMovie.getRating().replace("/","<small> / ") + "</small>"));
      }
    }
 else {
      textRating.setText(thisMovie.getRating());
    }
  }
 else {
    textRating.setText(R.string.stringNA);
  }
  if (!MizLib.isEmpty(thisMovie.getCertification())) {
    textCertification.setText(Html.fromHtml("<b>" + thisMovie.getCertification() + "</b>"));
  }
 else {
    textCertification.setText(Html.fromHtml("<b>" + getString(R.string.stringNA) + "</b>"));
  }
  loadImages();
}
