{
  RequestLine requestLine=request.getRequestLine();
  URL url=new URL(requestLine.getUri());
  HttpURLConnection connection=openConnection(url);
  connection.setRequestMethod(requestLine.getMethod());
  for (  Header header : request.getAllHeaders()) {
    connection.addRequestProperty(header.getName(),header.getValue());
  }
  if (request instanceof HttpEntityEnclosingRequest) {
    HttpEntity entity=((HttpEntityEnclosingRequest)request).getEntity();
    if (entity != null) {
      connection.setDoOutput(true);
      Header type=entity.getContentType();
      if (type != null) {
        connection.addRequestProperty(type.getName(),type.getValue());
      }
      Header encoding=entity.getContentEncoding();
      if (encoding != null) {
        connection.addRequestProperty(encoding.getName(),encoding.getValue());
      }
      if (entity.isChunked() || entity.getContentLength() < 0) {
        connection.setChunkedStreamingMode(0);
      }
 else       if (entity.getContentLength() <= 8192) {
        connection.addRequestProperty("Content-Length",Long.toString(entity.getContentLength()));
      }
 else {
        connection.setFixedLengthStreamingMode((int)entity.getContentLength());
      }
      entity.writeTo(connection.getOutputStream());
    }
  }
  int responseCode=connection.getResponseCode();
  String message=connection.getResponseMessage();
  BasicHttpResponse response=new BasicHttpResponse(HTTP_1_1,responseCode,message);
  InputStream responseBody=responseCode < HttpURLConnection.HTTP_BAD_REQUEST ? connection.getInputStream() : connection.getErrorStream();
  InputStreamEntity entity=new InputStreamEntity(responseBody,connection.getContentLength());
  for (int i=0; true; i++) {
    String name=connection.getHeaderFieldKey(i);
    if (name == null) {
      break;
    }
    BasicHeader header=new BasicHeader(name,connection.getHeaderField(i));
    response.addHeader(header);
    if (name.equalsIgnoreCase("Content-Type")) {
      entity.setContentType(header);
    }
 else     if (name.equalsIgnoreCase("Content-Encoding")) {
      entity.setContentEncoding(header);
    }
  }
  response.setEntity(entity);
  return response;
}
