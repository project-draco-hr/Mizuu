{
  reset();
  LocalBroadcastManager.getInstance(this).registerReceiver(mMessageReceiver,new IntentFilter("mizuu-stop-offline-download"));
  mContext=getApplicationContext();
  String defaultSize=mContext.getString(R.string._16kb);
  String bufferSize=PreferenceManager.getDefaultSharedPreferences(mContext).getString(BUFFER_SIZE,defaultSize);
  if (bufferSize.equals(defaultSize))   mBufferSize=8192 * 2;
 else   mBufferSize=8192;
  mFileUrl=intent.getExtras().getString(FILEPATH);
  mType=intent.getExtras().getInt(TYPE);
  mNotificationManager=(NotificationManager)getSystemService(Context.NOTIFICATION_SERVICE);
  Intent notificationIntent=new Intent(this,CancelOfflineDownload.class);
  notificationIntent.setAction(Intent.ACTION_MAIN);
  notificationIntent.addCategory(Intent.CATEGORY_LAUNCHER);
  mContentIntent=PendingIntent.getActivity(this,0,notificationIntent,0);
  mBuilder=new NotificationCompat.Builder(mContext);
  mBuilder.setOngoing(true);
  mBuilder.setOnlyAlertOnce(true);
  mBuilder.setSmallIcon(android.R.drawable.stat_sys_download);
  mBuilder.setContentIntent(mContentIntent);
  String message=getString(R.string.downloadingMovie);
  if (mType == MizLib.TYPE_SHOWS)   message=getString(R.string.downloadingEpisode);
  mBuilder.setTicker(message);
  mBuilder.setContentTitle(message);
  mBuilder.setContentText(getContentText());
  mBuilder.setLargeIcon(MizLib.getNotificationImageThumbnail(mContext,intent.getExtras().getString("thumb")));
  try {
    int width=MizLib.getLargeNotificationWidth(mContext);
    int height=(int)(width / 1.78);
    mBuilder.setStyle(new NotificationCompat.BigPictureStyle().setSummaryText(message).bigPicture(MizuuApplication.getPicasso(getApplicationContext()).load(intent.getExtras().getString("backdrop")).resize(width,height).get()));
  }
 catch (  IOException e) {
  }
  mBuilder.addAction(R.drawable.ic_action_discard,getString(android.R.string.cancel),mContentIntent);
  boolean exists=checkIfNetworkFileExists();
  if (!exists) {
    mHandler.post(new Runnable(){
      @Override public void run(){
        Toast.makeText(mContext,R.string.unavailable_file,Toast.LENGTH_LONG).show();
      }
    }
);
    stopSelf();
    return;
  }
  boolean ignoreSizeCheck=PreferenceManager.getDefaultSharedPreferences(mContext).getBoolean(IGNORE_FILESIZE_CHECK,false);
  if (!ignoreSizeCheck) {
    boolean sizeOK=checkFilesize();
    if (!sizeOK) {
      mHandler.post(new Runnable(){
        @Override public void run(){
          Toast.makeText(mContext,R.string.not_enough_space,Toast.LENGTH_LONG).show();
        }
      }
);
      stopSelf();
      return;
    }
  }
  exists=checkIfLocalCopyExists();
  if (exists) {
    stopSelf();
    return;
  }
  mHandler.post(new Runnable(){
    @Override public void run(){
      Toast.makeText(mContext,R.string.starting_download,Toast.LENGTH_SHORT).show();
    }
  }
);
  updateNotification();
  startForeground(NOTIFICATION_ID,mNotification);
  boolean success=beginTransfer();
  if (!success) {
    if (mFileUrl.startsWith("http"))     MizLib.getOfflineFile(mContext,mFileUrl).delete();
 else     MizLib.getOfflineFile(mContext,mSmb.getCanonicalPath()).delete();
  }
}
