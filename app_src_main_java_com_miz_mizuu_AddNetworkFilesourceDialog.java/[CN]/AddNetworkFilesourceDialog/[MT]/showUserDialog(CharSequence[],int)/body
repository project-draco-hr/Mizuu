{
  final ArrayList<FileSource> sources=new ArrayList<FileSource>();
  DbAdapterSources dbHelper=MizuuApplication.getSourcesAdapter();
  Cursor cursor=dbHelper.fetchAllSources();
  while (cursor.moveToNext()) {
    sources.add(new FileSource(cursor.getLong(cursor.getColumnIndex(DbAdapterSources.KEY_ROWID)),cursor.getString(cursor.getColumnIndex(DbAdapterSources.KEY_FILEPATH)),cursor.getInt(cursor.getColumnIndex(DbAdapterSources.KEY_FILESOURCE_TYPE)),cursor.getString(cursor.getColumnIndex(DbAdapterSources.KEY_USER)),cursor.getString(cursor.getColumnIndex(DbAdapterSources.KEY_PASSWORD)),cursor.getString(cursor.getColumnIndex(DbAdapterSources.KEY_DOMAIN)),cursor.getString(cursor.getColumnIndex(DbAdapterSources.KEY_TYPE))));
  }
  cursor.close();
  HashMap<String,String> userPass=new HashMap<String,String>();
  int count=sources.size();
  for (int i=0; i < count; i++) {
    String temp=sources.get(i).getFilepath().replace("smb://","");
    temp=temp.substring(0,temp.indexOf("/"));
    if (temp.equals(items[which])) {
      userPass.put((sources.get(i).getUser().isEmpty() ? getString(R.string.anonymous) : sources.get(i).getUser()),sources.get(i).getPassword());
    }
  }
  if (userPass.size() == 1) {
    String userTemp=userPass.keySet().iterator().next();
    userPass.get(userTemp);
    server.setText(items[which]);
    username.setText((userTemp.equals(getString(R.string.anonymous)) ? "" : userTemp));
    password.setText(userPass.get(userTemp));
  }
 else {
    final CharSequence[] usernames=new CharSequence[userPass.size()];
    final CharSequence[] passwords=new CharSequence[userPass.size()];
    int i=0;
    Iterator<String> it=userPass.keySet().iterator();
    while (it.hasNext()) {
      String s=it.next();
      usernames[i]=s;
      passwords[i]=userPass.get(s);
      i++;
    }
    AlertDialog.Builder builder2=new AlertDialog.Builder(this);
    builder2.setTitle(getString(R.string.selectLogin));
    builder2.setItems(usernames,new DialogInterface.OnClickListener(){
      @Override public void onClick(      DialogInterface dialog,      int choice){
        server.setText(items[which]);
        username.setText((usernames[choice].equals(getString(R.string.anonymous)) ? "" : usernames[choice]));
        password.setText(passwords[choice]);
      }
    }
);
    builder2.show();
  }
}
