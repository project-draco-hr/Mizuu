{
  if (resetTextFields) {
    mTitle.setText(mMovie.getTitle());
    mTitle.setTypeface(TypefaceUtils.getRobotoBold(getActivity()));
    mTitle.setSelection(mMovie.getTitle().length());
    mTagline.setText(mMovie.getTagline());
    if (!mMovie.getPlot().equals(getString(R.string.stringNoPlot)))     mDescription.setText(mMovie.getPlot());
    mGenres.setText(mMovie.getGenres());
  }
  mRuntime.setText(MizLib.getPrettyRuntime(getActivity(),MizLib.getInteger(mMovie.getRuntime())));
  mRuntime.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      showRuntimeDialog(MizLib.getInteger(mMovie.getRuntime()));
    }
  }
);
  if (!mMovie.getRating().equals("0.0")) {
    try {
      int rating=(int)(Double.parseDouble(mMovie.getRating()) * 10);
      mRating.setText(rating + " %");
    }
 catch (    NumberFormatException e) {
      mRating.setText(mMovie.getRating());
    }
  }
 else {
    mRating.setText(R.string.stringNA);
  }
  mRating.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      showRatingDialog(mMovie.getRawRating());
    }
  }
);
  mReleaseDate.setText(MizLib.getPrettyDatePrecise(getActivity(),mMovie.getReleasedate()));
  mReleaseDate.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      showDatePickerDialog(mMovie.getReleasedate());
    }
  }
);
  if (!TextUtils.isEmpty(mMovie.getCertification())) {
    mCertification.setText(mMovie.getCertification());
  }
 else {
    mCertification.setText(R.string.stringNA);
  }
  mCertification.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      showCertificationDialog();
    }
  }
);
}
