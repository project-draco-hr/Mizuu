{
  super.onViewCreated(v,savedInstanceState);
  mToolbar=(Toolbar)v.findViewById(R.id.toolbar);
  ((MizActivity)getActivity()).setSupportActionBar(mToolbar);
  mProgressBar=(ProgressBar)v.findViewById(R.id.progressBar1);
  v.findViewById(R.id.spinner1).setVisibility(View.GONE);
  mListView=(ListView)v.findViewById(R.id.listView1);
  mListView.setOnItemClickListener(new OnItemClickListener(){
    @Override public void onItemClick(    AdapterView<?> arg0,    View arg1,    int arg2,    long arg3){
      showMovie(arg2);
    }
  }
);
  mListView.setEmptyView(v.findViewById(R.id.no_results));
  v.findViewById(R.id.no_results).setVisibility(View.GONE);
  hideProgressBar();
  mSearchField=(EditText)v.findViewById(R.id.editText1);
  mSearchField.setSelection(mSearchField.length());
  mSearchField.addTextChangedListener(new TextWatcher(){
    @Override public void beforeTextChanged(    CharSequence s,    int start,    int count,    int after){
    }
    @Override public void onTextChanged(    CharSequence s,    int start,    int before,    int count){
    }
    @Override public void afterTextChanged(    Editable s){
      if (s.toString().length() > 0)       searchForMovies();
 else {
        mSearchTask.cancel(true);
        mResults.clear();
        mAdapter.notifyDataSetChanged();
      }
    }
  }
);
  mSearchField.setOnEditorActionListener(new OnEditorActionListener(){
    @Override public boolean onEditorAction(    TextView v,    int actionId,    KeyEvent event){
      if (actionId == EditorInfo.IME_NULL && event.getAction() == KeyEvent.ACTION_DOWN || actionId == EditorInfo.IME_ACTION_SEARCH)       searchForMovies();
      return true;
    }
  }
);
}
