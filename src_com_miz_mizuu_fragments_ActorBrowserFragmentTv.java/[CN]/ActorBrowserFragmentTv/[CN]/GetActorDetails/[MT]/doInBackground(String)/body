{
  try {
    String baseUrl=MizLib.getTmdbImageBaseUrl(mContext);
    HttpClient httpclient=null;
    HttpGet httppost=null;
    ResponseHandler<String> responseHandler=null;
    JSONObject jObject=null;
    if (!mId.startsWith("tmdb_")) {
      httpclient=new DefaultHttpClient();
      httppost=new HttpGet("https://api.themoviedb.org/3/find/" + mId + "?api_key="+ mTmdbApiKey+ "&external_source=tvdb_id");
      httppost.setHeader("Accept","application/json");
      responseHandler=new BasicResponseHandler();
      String results=httpclient.execute(httppost,responseHandler);
      jObject=new JSONObject(results);
      mId=MizLib.getStringFromJSONObject(jObject.getJSONArray("tv_results").getJSONObject(0),"id","");
    }
 else {
      httpclient=new DefaultHttpClient();
      mId=mId.replace("tmdb_","");
    }
    httppost=new HttpGet("https://api.themoviedb.org/3/tv/" + mId + "/credits?api_key="+ mTmdbApiKey);
    httppost.setHeader("Accept","application/json");
    responseHandler=new BasicResponseHandler();
    String html=httpclient.execute(httppost,responseHandler);
    jObject=new JSONObject(html);
    JSONArray jArray=jObject.getJSONArray("cast");
    actors.clear();
    Set<String> actorIds=new HashSet<String>();
    for (int i=0; i < jArray.length(); i++) {
      if (!actorIds.contains(jArray.getJSONObject(i).getString("id"))) {
        actorIds.add(jArray.getJSONObject(i).getString("id"));
        actors.add(new Actor(jArray.getJSONObject(i).getString("name"),jArray.getJSONObject(i).getString("character"),jArray.getJSONObject(i).getString("id"),baseUrl + MizLib.getActorUrlSize(getActivity()) + jArray.getJSONObject(i).getString("profile_path")));
      }
    }
    actorIds.clear();
    actorIds=null;
  }
 catch (  Exception e) {
  }
  return null;
}
