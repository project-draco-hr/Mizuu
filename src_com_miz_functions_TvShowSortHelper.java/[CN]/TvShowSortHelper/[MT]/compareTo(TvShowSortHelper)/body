{
switch (mSortType) {
case TITLE:
    if (mTvShow != null && another.mTvShow != null) {
      String s1=mTvShow.getTitle(), s2=another.mTvShow.getTitle();
      if (s1 != null && s2 != null)       return s1.compareToIgnoreCase(s2);
      return 0;
    }
  return 0;
case RELEASE:
try {
  return mTvShow.getFirstAirdate().compareTo(another.mTvShow.getFirstAirdate()) * -1;
}
 catch (Exception e) {
  return 0;
}
case RATING:
try {
if (mTvShow.getRawRating() < another.mTvShow.getRawRating()) return 1;
 else if (mTvShow.getRawRating() > another.mTvShow.getRawRating()) return -1;
}
 catch (Exception e) {
}
return 0;
case WEIGHTED_RATING:
try {
if (mTvShow.getWeightedRating() < another.mTvShow.getWeightedRating()) {
return 1;
}
 else if (mTvShow.getWeightedRating() > another.mTvShow.getWeightedRating()) return -1;
}
 catch (Exception e) {
}
return 0;
case NEWEST_EPISODE:
return mTvShow.getLatestEpisodeAirdate().compareToIgnoreCase(another.mTvShow.getLatestEpisodeAirdate()) * -1;
case DURATION:
int show1=Integer.valueOf(mTvShow.getRuntime());
int show2=Integer.valueOf(another.mTvShow.getRuntime());
if (show1 < show2) return 1;
 else if (show1 > show2) return -1;
return 0;
default :
return 0;
}
}
