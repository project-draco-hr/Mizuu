{
  super.onViewCreated(v,savedInstanceState);
  pbar=(ProgressBar)v.findViewById(R.id.progressbar);
  if (episodes.size() > 0)   pbar.setVisibility(View.GONE);
  mGridView=(StickyGridHeadersGridView)v.findViewById(R.id.gridView);
  mAdapter=new EpisodesAdapter(getActivity().getApplicationContext(),mGridView,new SimpleAdapter());
  mGridView.setAdapter(mAdapter);
  mGridView.getViewTreeObserver().addOnGlobalLayoutListener(new ViewTreeObserver.OnGlobalLayoutListener(){
    @Override public void onGlobalLayout(){
      if (mAdapter.getNumColumns() == 0) {
        final int numColumns=(int)Math.floor(mGridView.getWidth() / (mImageThumbSize + mImageThumbSpacing));
        mGridView.setColumnWidth(mImageThumbSize);
        if (numColumns > 0) {
          final int columnWidth=(mGridView.getWidth() / numColumns) - mImageThumbSpacing;
          mAdapter.setNumColumns(numColumns);
          mAdapter.setItemHeight(columnWidth);
        }
      }
    }
  }
);
  mGridView.setOnItemClickListener(new OnItemClickListener(){
    @Override public void onItemClick(    AdapterView<?> arg0,    View arg1,    int arg2,    long arg3){
      Intent intent=YouTubeStandalonePlayer.createVideoIntent(getActivity(),MizLib.YOUTUBE_API,episodes.get(arg2),0,false,true);
      startActivity(intent);
    }
  }
);
  mGridView.setOnScrollListener(new AbsListView.OnScrollListener(){
    @Override public void onScrollStateChanged(    AbsListView absListView,    int scrollState){
      if (scrollState == AbsListView.OnScrollListener.SCROLL_STATE_FLING) {
        mImageFetcher.setPauseWork(true);
      }
 else {
        mImageFetcher.setPauseWork(false);
      }
    }
    @Override public void onScroll(    AbsListView absListView,    int firstVisibleItem,    int visibleItemCount,    int totalItemCount){
    }
  }
);
}
