{
  String result=input;
  Pattern searchPattern=Pattern.compile("(?i)s(\\d){1,2}e(\\d){1,3}");
  Matcher searchMatcher=searchPattern.matcher(input);
  if (searchMatcher.find()) {
    try {
      result=input.substring(0,searchMatcher.start());
      return result;
    }
 catch (    IndexOutOfBoundsException e) {
    }
  }
  searchPattern=Pattern.compile("(?i)(\\d){1,2}e(\\d){1,3}");
  searchMatcher=searchPattern.matcher(input);
  if (searchMatcher.find()) {
    try {
      result=input.substring(0,searchMatcher.start());
      return result;
    }
 catch (    IndexOutOfBoundsException e) {
    }
  }
  searchPattern=Pattern.compile("(?i)s(\\d){1,2}x(\\d){1,3}");
  searchMatcher=searchPattern.matcher(input);
  if (searchMatcher.find()) {
    try {
      result=input.substring(0,searchMatcher.start());
      return result;
    }
 catch (    IndexOutOfBoundsException e) {
    }
  }
  searchPattern=Pattern.compile("(?i)(\\d){1,2}x(\\d){1,3}");
  searchMatcher=searchPattern.matcher(input);
  if (searchMatcher.find()) {
    try {
      result=input.substring(0,searchMatcher.start());
      return result;
    }
 catch (    IndexOutOfBoundsException e) {
    }
  }
  searchPattern=Pattern.compile("(?i)season((\\s)+)(\\d){1,2}((\\s)+)episode((\\s)+)(\\d){1,3}");
  searchMatcher=searchPattern.matcher(input);
  if (searchMatcher.find()) {
    try {
      result=input.substring(0,searchMatcher.start());
      return result;
    }
 catch (    IndexOutOfBoundsException e) {
    }
  }
  searchPattern=Pattern.compile("(?i)episode((\\s)+)(\\d){1,3}");
  searchMatcher=searchPattern.matcher(input);
  if (searchMatcher.find()) {
    try {
      result=input.substring(0,searchMatcher.start());
      return result;
    }
 catch (    IndexOutOfBoundsException e) {
    }
  }
  searchPattern=Pattern.compile("(?i)e(\\d){1,5}");
  searchMatcher=searchPattern.matcher(input);
  if (searchMatcher.find()) {
    try {
      result=input.substring(0,searchMatcher.start());
      return result;
    }
 catch (    IndexOutOfBoundsException e) {
    }
  }
  searchPattern=Pattern.compile("(\\d){1,5}");
  searchMatcher=searchPattern.matcher(input);
  if (searchMatcher.find()) {
    try {
      result=input.substring(0,searchMatcher.start());
      return result;
    }
 catch (    IndexOutOfBoundsException e) {
    }
  }
  return result;
}
