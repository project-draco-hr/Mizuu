{
  mMovie.setHasWatched(!mMovie.hasWatched());
  boolean success=true;
  if (mMovie.hasMultipleVersions()) {
    MovieVersion[] versions=mMovie.getMultipleVersions();
    for (int i=0; i < versions.length; i++)     success=success && mDatabase.updateMovieSingleItem(Long.valueOf(versions[i].getRowId()),DbAdapter.KEY_HAS_WATCHED,mMovie.getHasWatched());
  }
 else {
    success=mDatabase.updateMovieSingleItem(Long.valueOf(mMovie.getRowId()),DbAdapter.KEY_HAS_WATCHED,mMovie.getHasWatched());
  }
  if (success) {
    invalidateOptionsMenu();
    if (showToast)     if (mMovie.hasWatched()) {
      Toast.makeText(this,getString(R.string.markedAsWatched),Toast.LENGTH_SHORT).show();
    }
 else {
      Toast.makeText(this,getString(R.string.markedAsUnwatched),Toast.LENGTH_SHORT).show();
    }
    notifyDatasetChanges();
  }
 else   Toast.makeText(this,getString(R.string.errorOccured),Toast.LENGTH_SHORT).show();
  if (mRemoveMoviesFromWatchlist)   removeFromWatchlist();
  new Thread(){
    @Override public void run(){
      ArrayList<Movie> watchedMovies=new ArrayList<Movie>();
      watchedMovies.add(mMovie);
      MizLib.markMovieAsWatched(watchedMovies,getApplicationContext());
    }
  }
.start();
}
