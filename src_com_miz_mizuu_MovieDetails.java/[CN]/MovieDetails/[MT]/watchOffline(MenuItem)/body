{
  if (thisMovie.hasOfflineCopy()) {
    AlertDialog.Builder builder=new AlertDialog.Builder(this);
    builder.setMessage(getString(R.string.areYouSure)).setTitle(getString(R.string.removeOfflineCopy)).setCancelable(false).setPositiveButton(getString(android.R.string.yes),new DialogInterface.OnClickListener(){
      public void onClick(      DialogInterface dialog,      int id){
        boolean success=thisMovie.getOfflineCopyFile().delete();
        if (!success)         thisMovie.getOfflineCopyFile().delete();
        invalidateOptionsMenu();
        return;
      }
    }
).setNegativeButton(getString(android.R.string.no),new DialogInterface.OnClickListener(){
      public void onClick(      DialogInterface dialog,      int id){
        dialog.cancel();
      }
    }
).create().show();
  }
 else {
    AlertDialog.Builder builder=new AlertDialog.Builder(this);
    builder.setMessage(getString(R.string.downloadOfflineCopy)).setTitle(getString(R.string.watchOffline)).setCancelable(false).setPositiveButton(getString(android.R.string.yes),new DialogInterface.OnClickListener(){
      public void onClick(      DialogInterface dialog,      int id){
        if (MizLib.isLocalCopyBeingDownloaded(MovieDetails.this))         Toast.makeText(getApplicationContext(),R.string.addedToDownloadQueue,Toast.LENGTH_SHORT).show();
        Intent i=new Intent(MovieDetails.this,MakeAvailableOffline.class);
        i.putExtra(MakeAvailableOffline.FILEPATH,thisMovie.getFilepath());
        i.putExtra(MakeAvailableOffline.TYPE,MizLib.TYPE_MOVIE);
        i.putExtra("thumb",thisMovie.getThumbnail());
        i.putExtra("backdrop",thisMovie.getBackdrop());
        startService(i);
        return;
      }
    }
).setNegativeButton(getString(android.R.string.no),new DialogInterface.OnClickListener(){
      public void onClick(      DialogInterface dialog,      int id){
        dialog.cancel();
      }
    }
).create().show();
  }
}
