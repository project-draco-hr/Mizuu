{
  try {
    HttpClient httpclient=new DefaultHttpClient();
    HttpGet httppost=new HttpGet("https://api.themoviedb.org/3/configuration?api_key=" + mTmdbApiKey);
    httppost.setHeader("Accept","application/json");
    ResponseHandler<String> responseHandler=new BasicResponseHandler();
    String baseUrl=httpclient.execute(httppost,responseHandler);
    JSONObject jObject=new JSONObject(baseUrl);
    try {
      baseUrl=jObject.getJSONObject("images").getString("base_url");
    }
 catch (    Exception e) {
      baseUrl=MizLib.TMDB_BASE_URL;
    }
    httppost=new HttpGet("https://api.themoviedb.org/3/movie/" + params[0] + "/similar_movies?api_key="+ mTmdbApiKey);
    httppost.setHeader("Accept","application/json");
    responseHandler=new BasicResponseHandler();
    String html=httpclient.execute(httppost,responseHandler);
    jObject=new JSONObject(html);
    JSONArray jArray=jObject.getJSONArray("results");
    pics_sources.clear();
    for (int i=0; i < jArray.length(); i++) {
      if (!MizLib.isAdultContent(getActivity(),jArray.getJSONObject(i).getString("title")) && !MizLib.isAdultContent(getActivity(),jArray.getJSONObject(i).getString("original_title"))) {
        pics_sources.add(new WebMovie(getActivity().getApplicationContext(),jArray.getJSONObject(i).getString("original_title"),jArray.getJSONObject(i).getString("id"),baseUrl + MizLib.getImageUrlSize(getActivity()) + jArray.getJSONObject(i).getString("poster_path"),jArray.getJSONObject(i).getString("release_date")));
      }
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  return null;
}
