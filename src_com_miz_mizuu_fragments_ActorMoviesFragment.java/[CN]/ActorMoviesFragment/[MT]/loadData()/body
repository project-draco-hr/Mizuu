{
  try {
    JSONObject jObject=new JSONObject(json);
    JSONArray jArray=jObject.getJSONObject("credits").getJSONArray("cast");
    Set<String> movieIds=new HashSet<String>();
    for (int i=0; i < jArray.length(); i++) {
      if (!movieIds.contains(jArray.getJSONObject(i).getString("id"))) {
        movieIds.add(jArray.getJSONObject(i).getString("id"));
        if (!isInArray(jArray.getJSONObject(i).getString("id")))         if (!MizLib.isAdultContent(getActivity(),jArray.getJSONObject(i).getString("title")) && !MizLib.isAdultContent(getActivity(),jArray.getJSONObject(i).getString("original_title"))) {
          pics_sources.add(new WebMovie(jArray.getJSONObject(i).getString("original_title"),jArray.getJSONObject(i).getString("id"),baseUrl + MizLib.getImageUrlSize(getActivity()) + jArray.getJSONObject(i).getString("poster_path"),jArray.getJSONObject(i).getString("release_date")));
        }
      }
    }
    movieIds.clear();
    movieIds=null;
    Collections.sort(pics_sources,MizLib.getWebMovieDateComparator());
    new MoviesInLibraryCheck(pics_sources).execute();
  }
 catch (  Exception ignored) {
  }
}
