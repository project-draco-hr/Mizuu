{
  super.onViewCreated(v,savedInstanceState);
  mToolbar=(Toolbar)v.findViewById(R.id.toolbar);
  mToolbar.setBackgroundResource(android.R.color.transparent);
  ViewUtils.setProperToolbarSize(mContext,mToolbar);
  ((MizActivity)getActivity()).setSupportActionBar(mToolbar);
  ((ActionBarActivity)getActivity()).getSupportActionBar().setDisplayHomeAsUpEnabled(true);
  mImageThumbSize=getResources().getDimensionPixelSize(R.dimen.horizontal_grid_item_width);
  mImageThumbSpacing=getResources().getDimensionPixelSize(R.dimen.image_thumbnail_spacing);
  mDetailsArea=v.findViewById(R.id.details_area);
  background=(ImageView)v.findViewById(R.id.imageBackground);
  textTitle=(TextView)v.findViewById(R.id.movieTitle);
  textPlot=(TextView)v.findViewById(R.id.textView2);
  textGenre=(TextView)v.findViewById(R.id.textView7);
  textRuntime=(TextView)v.findViewById(R.id.textView9);
  textReleaseDate=(TextView)v.findViewById(R.id.textReleaseDate);
  textRating=(TextView)v.findViewById(R.id.textView12);
  textCertification=(TextView)v.findViewById(R.id.textView11);
  cover=(ImageView)v.findViewById(R.id.traktIcon);
  mSeasonsLayout=(HorizontalCardLayout)v.findViewById(R.id.horizontal_card_layout);
  mActorsLayout=(HorizontalCardLayout)v.findViewById(R.id.horizontal_card_layout_extra);
  mActorsLayout.setVisibility(View.VISIBLE);
  mScrollView=(ObservableScrollView)v.findViewById(R.id.observableScrollView);
  mFab=(FloatingActionButton)v.findViewById(R.id.fab);
  mFab.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      ViewUtils.animateFabJump(v,new SimpleAnimatorListener(){
        @Override public void onAnimationEnd(        Animator animation){
          playFirstEpisode();
        }
      }
);
    }
  }
);
  if (MizLib.isTablet(mContext))   mFab.setType(FloatingActionButton.TYPE_NORMAL);
  v.findViewById(R.id.textView3).setVisibility(View.GONE);
  v.findViewById(R.id.textView6).setVisibility(View.GONE);
  final int height=MizLib.getActionBarAndStatusBarHeight(mContext);
  mScrollView.setOnScrollChangedListener(new OnScrollChangedListener(){
    @Override public void onScrollChanged(    ScrollView who,    int l,    int t,    int oldl,    int oldt){
      ViewUtils.handleOnScrollChangedEvent(getActivity(),v,background,thisShow.getTitle(),height,t,mToolbar,mToolbarColor);
    }
  }
);
  mScrollView.getViewTreeObserver().addOnGlobalLayoutListener(new ViewTreeObserver.OnGlobalLayoutListener(){
    @Override public void onGlobalLayout(){
      ViewUtils.setLayoutParamsForDetailsEmptyView(mContext,v,background,mScrollView,this);
    }
  }
);
  textTitle.setVisibility(View.VISIBLE);
  textTitle.setText(thisShow.getTitle());
  textTitle.setTypeface(mCondensedRegular);
  textPlot.setTypeface(mCondensedRegular);
  textRuntime.setTypeface(mMedium);
  textRating.setTypeface(mMedium);
  textCertification.setTypeface(mMedium);
  textRuntime.setTypeface(mMedium);
  textCertification.setTypeface(mMedium);
  textRating.setTypeface(mMedium);
  textPlot.setBackgroundResource(R.drawable.selectable_background);
  textPlot.setMaxLines(getActivity().getResources().getInteger(R.integer.show_details_max_lines));
  textPlot.setTag(true);
  textPlot.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      if (((Boolean)textPlot.getTag())) {
        ViewUtils.animateTextViewMaxLines(textPlot,50);
        textPlot.setTag(false);
      }
 else {
        ViewUtils.animateTextViewMaxLines(textPlot,getResources().getInteger(R.integer.show_details_max_lines));
        textPlot.setTag(true);
      }
    }
  }
);
  textPlot.setEllipsize(TextUtils.TruncateAt.END);
  textPlot.setFocusable(true);
  if (MizLib.isTablet(getActivity()))   textPlot.setLineSpacing(0,1.15f);
  textPlot.setText(thisShow.getDescription());
  textGenre.setTypeface(mMediumItalic);
  if (!TextUtils.isEmpty(thisShow.getGenres())) {
    textGenre.setText(thisShow.getGenres());
  }
 else {
    textGenre.setVisibility(View.GONE);
  }
  textRuntime.setText(MizLib.getPrettyRuntime(getActivity(),Integer.parseInt(thisShow.getRuntime())));
  textReleaseDate.setTypeface(mMedium);
  textReleaseDate.setText(MizLib.getPrettyDate(getActivity(),thisShow.getFirstAirdate()));
  if (!thisShow.getRating().equals("0.0")) {
    try {
      int rating=(int)(Double.parseDouble(thisShow.getRating()) * 10);
      textRating.setText(Html.fromHtml(rating + "<small> %</small>"));
    }
 catch (    NumberFormatException e) {
      textRating.setText(thisShow.getRating());
    }
  }
 else {
    textRating.setText(R.string.stringNA);
  }
  if (!TextUtils.isEmpty(thisShow.getCertification())) {
    textCertification.setText(thisShow.getCertification());
  }
 else {
    textCertification.setText(R.string.stringNA);
  }
  mSeasonsLayout.setTitle(R.string.seasons);
  mSeasonsLayout.setSeeMoreVisibility(true);
  mSeasonsLayout.getViewTreeObserver().addOnGlobalLayoutListener(new ViewTreeObserver.OnGlobalLayoutListener(){
    @Override public void onGlobalLayout(){
      if (mActorsLayout.getWidth() > 0) {
        final int numColumns=(int)Math.floor(mActorsLayout.getWidth() / (mImageThumbSize + mImageThumbSpacing));
        mImageThumbSize=(mActorsLayout.getWidth() - (numColumns * mImageThumbSpacing)) / numColumns;
        loadSeasons(numColumns);
        MizLib.removeViewTreeObserver(mSeasonsLayout.getViewTreeObserver(),this);
      }
    }
  }
);
  mSeasonsLayout.setSeeMoreOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      startActivity(IntentUtils.getTvShowSeasonsIntent(mContext,thisShow.getTitle(),thisShow.getId(),mToolbarColor));
    }
  }
);
  mActorsLayout.setTitle(R.string.detailsActors);
  mActorsLayout.setSeeMoreVisibility(true);
  mActorsLayout.getViewTreeObserver().addOnGlobalLayoutListener(new ViewTreeObserver.OnGlobalLayoutListener(){
    @Override public void onGlobalLayout(){
      if (mActorsLayout.getWidth() > 0) {
        final int numColumns=(int)Math.floor(mActorsLayout.getWidth() / (mImageThumbSize + mImageThumbSpacing));
        mImageThumbSize=(mActorsLayout.getWidth() - (numColumns * mImageThumbSpacing)) / numColumns;
        loadActors(numColumns);
        MizLib.removeViewTreeObserver(mActorsLayout.getViewTreeObserver(),this);
      }
    }
  }
);
  mActorsLayout.setSeeMoreOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      startActivity(IntentUtils.getActorBrowserTvShows(mContext,thisShow.getTitle(),thisShow.getId(),mToolbarColor));
    }
  }
);
  ViewUtils.updateToolbarBackground(getActivity(),mToolbar,0,thisShow.getTitle(),mToolbarColor);
  loadImages();
}
