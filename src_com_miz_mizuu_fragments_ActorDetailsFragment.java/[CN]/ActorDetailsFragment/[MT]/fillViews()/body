{
  mName.setText(mActor.getName());
  if (!TextUtils.isEmpty(mActor.getPlaceOfBirth()))   mPlaceOfBirth.setText(mActor.getPlaceOfBirth());
 else   mPlaceOfBirth.setVisibility(View.GONE);
  if (!TextUtils.isEmpty(mActor.getBiography()))   mBiography.setText(mActor.getBiography());
 else   mBiography.setText(R.string.no_biography);
  mBirthday.setText(MizLib.getPrettyDatePrecise(mContext,mActor.getBirthday()));
  mKnownCredits.setText(String.valueOf(mActor.getKnownCreditCount()));
  mPicasso.load(mActor.getProfilePhoto()).placeholder(R.drawable.noactor).error(R.drawable.noactor).transform(new PaletteTransformation(mActorId,mDetailsLayout,mMovieCards.getSeeMoreView(),mTvCards.getSeeMoreView(),mPhotoCards.getSeeMoreView(),mTaggedPhotoCards.getSeeMoreView())).into(mPhoto);
  if (!MizLib.isPortrait(mContext)) {
    String backdropImage=mActor.getBackdropImage();
    mPicasso.load(backdropImage).placeholder(R.drawable.bg).error(R.drawable.bg).transform(new BlurTransformation(mContext,backdropImage,2)).into(mBackdrop);
    mBackdrop.setColorFilter(Color.parseColor("#aa181818"),android.graphics.PorterDuff.Mode.SRC_OVER);
  }
  mMovieCards.setTitle(R.string.chooserMovies);
  mMovieCards.setSeeMoreVisibility(true);
  mMovieCards.getViewTreeObserver().addOnGlobalLayoutListener(new ViewTreeObserver.OnGlobalLayoutListener(){
    @Override public void onGlobalLayout(){
      if (mMovieCards.getWidth() > 0) {
        final int numColumns=(int)Math.floor(mMovieCards.getWidth() / (mImageThumbSize + mImageThumbSpacing));
        mImageThumbSize=(mMovieCards.getWidth() - (numColumns * mImageThumbSpacing)) / numColumns;
        mMovieCards.loadItems(mContext,mPicasso,numColumns,mImageThumbSize,mActor.getMovies(),HorizontalCardLayout.MOVIES);
        MizLib.removeViewTreeObserver(mMovieCards.getViewTreeObserver(),this);
      }
    }
  }
);
  mMovieCards.setSeeMoreOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      startActivity(IntentUtils.getActorMoviesIntent(mContext,mActor.getName(),mActor.getId()));
    }
  }
);
  mTvCards.setTitle(R.string.chooserTVShows);
  mTvCards.setSeeMoreVisibility(true);
  mTvCards.getViewTreeObserver().addOnGlobalLayoutListener(new ViewTreeObserver.OnGlobalLayoutListener(){
    @Override public void onGlobalLayout(){
      if (mTvCards.getWidth() > 0) {
        final int numColumns=(int)Math.floor(mTvCards.getWidth() / (mImageThumbSize + mImageThumbSpacing));
        mImageThumbSize=(mTvCards.getWidth() - (numColumns * mImageThumbSpacing)) / numColumns;
        mTvCards.loadItems(mContext,mPicasso,numColumns,mImageThumbSize,mActor.getTvShows(),HorizontalCardLayout.TV_SHOWS);
        MizLib.removeViewTreeObserver(mTvCards.getViewTreeObserver(),this);
      }
    }
  }
);
  mTvCards.setSeeMoreOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      startActivity(IntentUtils.getActorTvShowsIntent(mContext,mActor.getName(),mActor.getId()));
    }
  }
);
  mPhotoCards.setTitle(R.string.actorsShowAllPhotos);
  mPhotoCards.setSeeMoreVisibility(true);
  mPhotoCards.getViewTreeObserver().addOnGlobalLayoutListener(new ViewTreeObserver.OnGlobalLayoutListener(){
    @Override public void onGlobalLayout(){
      if (mPhotoCards.getWidth() > 0) {
        final int numColumns=(int)Math.floor(mPhotoCards.getWidth() / (mImageThumbSize + mImageThumbSpacing));
        mImageThumbSize=(mPhotoCards.getWidth() - (numColumns * mImageThumbSpacing)) / numColumns;
        mPhotoCards.loadItems(mContext,mPicasso,numColumns,mImageThumbSize,mActor.getPhotos(),HorizontalCardLayout.PHOTOS);
        MizLib.removeViewTreeObserver(mPhotoCards.getViewTreeObserver(),this);
      }
    }
  }
);
  mPhotoCards.setSeeMoreOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      startActivity(IntentUtils.getActorPhotosIntent(mContext,mActor.getName(),mActor.getId()));
    }
  }
);
  mTaggedPhotoCards.setTitle(R.string.actorsTaggedPhotos);
  mTaggedPhotoCards.setSeeMoreVisibility(true);
  mTaggedPhotoCards.getViewTreeObserver().addOnGlobalLayoutListener(new ViewTreeObserver.OnGlobalLayoutListener(){
    @Override public void onGlobalLayout(){
      if (mTaggedPhotoCards.getWidth() > 0) {
        final int numColumns=(int)Math.floor(mTaggedPhotoCards.getWidth() / (mImageThumbBackdropSize + mImageThumbSpacing));
        mImageThumbBackdropSize=(mTaggedPhotoCards.getWidth() - (numColumns * mImageThumbSpacing)) / numColumns;
        mTaggedPhotoCards.loadItems(mContext,mPicasso,numColumns,mImageThumbBackdropSize,mActor.getTaggedPhotos(),HorizontalCardLayout.TAGGED_PHOTOS);
        MizLib.removeViewTreeObserver(mTaggedPhotoCards.getViewTreeObserver(),this);
      }
    }
  }
);
  mTaggedPhotoCards.setSeeMoreOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      startActivity(IntentUtils.getActorTaggedPhotosIntent(mContext,mActor.getName(),mActor.getId()));
    }
  }
);
}
