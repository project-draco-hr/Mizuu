{
  super.onViewCreated(v,savedInstanceState);
  pbar=(ProgressBar)v.findViewById(R.id.pbar);
  useSystemLanguage=(CheckBox)v.findViewById(R.id.searchLanguage);
  useSystemLanguage.setText(getString(R.string.searchIn) + " " + locale.getDisplayLanguage(Locale.ENGLISH));
  if (localizedInfo)   useSystemLanguage.setChecked(true);
  lv=(ListView)v.findViewById(android.R.id.list);
  lv.setOnItemClickListener(new OnItemClickListener(){
    @Override public void onItemClick(    AdapterView<?> arg0,    View arg1,    int arg2,    long arg3){
      showMovie(arg2);
    }
  }
);
  lv.setEmptyView(v.findViewById(R.id.no_results));
  v.findViewById(R.id.no_results).setVisibility(View.GONE);
  searchText=(EditText)v.findViewById(R.id.search);
  searchText.setSelection(searchText.length());
  searchText.addTextChangedListener(new TextWatcher(){
    @Override public void beforeTextChanged(    CharSequence s,    int start,    int count,    int after){
    }
    @Override public void onTextChanged(    CharSequence s,    int start,    int before,    int count){
    }
    @Override public void afterTextChanged(    Editable s){
      if (s.toString().length() > 0)       searchForMovies();
 else {
        startSearch.cancel(true);
        results.clear();
        mAdapter.notifyDataSetChanged();
      }
    }
  }
);
  searchText.setOnEditorActionListener(new OnEditorActionListener(){
    @Override public boolean onEditorAction(    TextView v,    int actionId,    KeyEvent event){
      if (actionId == EditorInfo.IME_NULL && event.getAction() == KeyEvent.ACTION_DOWN || actionId == EditorInfo.IME_ACTION_SEARCH)       searchForMovies();
      return true;
    }
  }
);
}
