{
  for (int i=0; i < mShowStructures.size(); i++) {
    if (mCancel)     return;
    ShowStructure ss=mShowStructures.get(i);
    ss.setCustomTags(mIgnoredTags);
    mShowFolderNameMap.put(ss.getDecryptedShowFolderName(),i);
    mImdbMap.put(i,ss.hasImdbId());
  }
  TvShowApiService service=MizuuApplication.getTvShowSourceService(mContext);
  for (  String showFolderName : mShowFolderNameMap.keySet()) {
    if (mCancel)     return;
    TvShow show=null;
    List<TvShow> results=new ArrayList<TvShow>();
    if (!overrideShowId()) {
      ShowStructure ss=mShowStructures.get(mShowFolderNameMap.get(showFolderName).iterator().next());
      if (ss.hasImdbId())       results=service.searchByImdbId(ss.getImdbId(),null);
      if (results.size() == 0) {
        int year=mShowStructures.get(mShowFolderNameMap.get(showFolderName).iterator().next()).getReleaseYear();
        if (year >= 0)         results=service.search(showFolderName + " " + year,null);
      }
      if (results.size() == 0)       results=service.search(showFolderName,null);
    }
 else     show=service.get(getShowId(),mLocale);
    if (results.size() > 0 || overrideShowId()) {
      if (!overrideShowId())       show=service.get(results.get(0).getId(),mLocale);
      createShow(show);
      int episodeCount=0;
      for (      Integer value : mShowFolderNameMap.get(showFolderName)) {
        if (mCancel)         continue;
        ShowStructure ss=mShowStructures.get(value);
        for (        com.miz.identification.Episode ep : ss.getEpisodes()) {
          if (mCancel)           continue;
          downloadEpisode(show,ep.getSeason(),ep.getEpisode(),ss.getFilepath());
          episodeCount++;
        }
      }
      showAddedShowNotification(show,episodeCount);
    }
 else {
      for (      Integer value : mShowFolderNameMap.get(showFolderName)) {
        if (mCancel)         continue;
        ShowStructure ss=mShowStructures.get(value);
        show=null;
        results=new ArrayList<TvShow>();
        if (ss.hasImdbId())         results=service.searchByImdbId(ss.getImdbId(),null);
        if (results.size() == 0) {
          int year=ss.getReleaseYear();
          if (year >= 0)           results=service.search(ss.getDecryptedFilename() + " " + year,null);
        }
        if (results.size() == 0)         results=service.search(ss.getDecryptedFilename(),null);
        if (results.size() == 0) {
          show=new TvShow();
          show.setId(DbAdapterTvShows.UNIDENTIFIED_ID);
        }
 else {
          show=service.get(results.get(0).getId(),mLocale);
        }
        createShow(show);
        for (        com.miz.identification.Episode ep : ss.getEpisodes()) {
          if (mCancel)           continue;
          downloadEpisode(show,ep.getSeason(),ep.getEpisode(),ss.getFilepath());
        }
        showAddedShowNotification(show,ss.getEpisodes().size());
      }
    }
  }
}
