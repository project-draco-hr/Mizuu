{
  mMovieDatabase=MizuuApplication.getMovieAdapter();
  Cursor cursor=mMovieDatabase.fetchAllMovies(DbAdapter.KEY_TITLE + " ASC",false);
  ColumnIndexCache cache=new ColumnIndexCache();
  try {
    while (cursor.moveToNext()) {
      mTmdbIds.add(cursor.getString(cache.getColumnIndex(cursor,DbAdapter.KEY_TMDB_ID)));
      mMovies.add(new Movie(this,MizuuApplication.getMovieMappingAdapter().getFirstFilepathForMovie(cursor.getString(cache.getColumnIndex(cursor,DbAdapter.KEY_TMDB_ID))),cursor.getString(cache.getColumnIndex(cursor,DbAdapter.KEY_TITLE)),cursor.getString(cache.getColumnIndex(cursor,DbAdapter.KEY_PLOT)),cursor.getString(cache.getColumnIndex(cursor,DbAdapter.KEY_TAGLINE)),cursor.getString(cache.getColumnIndex(cursor,DbAdapter.KEY_TMDB_ID)),cursor.getString(cache.getColumnIndex(cursor,DbAdapter.KEY_IMDB_ID)),cursor.getString(cache.getColumnIndex(cursor,DbAdapter.KEY_RATING)),cursor.getString(cache.getColumnIndex(cursor,DbAdapter.KEY_RELEASEDATE)),cursor.getString(cache.getColumnIndex(cursor,DbAdapter.KEY_CERTIFICATION)),cursor.getString(cache.getColumnIndex(cursor,DbAdapter.KEY_RUNTIME)),cursor.getString(cache.getColumnIndex(cursor,DbAdapter.KEY_TRAILER)),cursor.getString(cache.getColumnIndex(cursor,DbAdapter.KEY_GENRES)),cursor.getString(cache.getColumnIndex(cursor,DbAdapter.KEY_FAVOURITE)),cursor.getString(cache.getColumnIndex(cursor,DbAdapter.KEY_ACTORS)),cursor.getString(cache.getColumnIndex(cursor,DbAdapter.KEY_COLLECTION)),cursor.getString(cache.getColumnIndex(cursor,DbAdapter.KEY_COLLECTION_ID)),cursor.getString(cache.getColumnIndex(cursor,DbAdapter.KEY_TO_WATCH)),cursor.getString(cache.getColumnIndex(cursor,DbAdapter.KEY_HAS_WATCHED)),cursor.getString(cache.getColumnIndex(cursor,DbAdapter.KEY_DATE_ADDED)),false,true));
    }
  }
 catch (  Exception e) {
  }
 finally {
    cursor.close();
    cache.clear();
  }
}
