{
  View v=inflater.inflate(R.layout.image_grid_fragment,container,false);
  mProgressBar=(ProgressBar)v.findViewById(R.id.progress);
  mEmptyLibraryLayout=v.findViewById(R.id.empty_library_layout);
  mEmptyLibraryTitle=(TextView)v.findViewById(R.id.empty_library_title);
  mEmptyLibraryTitle.setTypeface(TypefaceUtils.getRobotoCondensedRegular(mContext));
  mEmptyLibraryDescription=(TextView)v.findViewById(R.id.empty_library_description);
  mEmptyLibraryDescription.setTypeface(TypefaceUtils.getRobotoLight(mContext));
  mAdapter=new LoaderAdapter(mContext);
  mGridView=(ObservableGridView)v.findViewById(R.id.gridView);
  mGridView.setAdapter(mAdapter);
  mGridView.setColumnWidth(mImageThumbSize);
  mGridView.setOnItemClickListener(new OnItemClickListener(){
    @Override public void onItemClick(    AdapterView<?> arg0,    View arg1,    int arg2,    long arg3){
      viewTvShowDetails(arg2,arg1);
    }
  }
);
  mGridView.setChoiceMode(GridView.CHOICE_MODE_MULTIPLE_MODAL);
  mGridView.setMultiChoiceModeListener(new AbsListView.MultiChoiceModeListener(){
    @Override public void onItemCheckedStateChanged(    ActionMode mode,    int position,    long id,    boolean checked){
      mAdapter.setItemChecked(position,checked);
      mode.setTitle(String.format(getString(R.string.selected),mAdapter.getCheckedItemCount()));
    }
    @Override public boolean onCreateActionMode(    ActionMode mode,    Menu menu){
      getActivity().getMenuInflater().inflate(R.menu.show_library_cab,menu);
      return true;
    }
    @Override public boolean onPrepareActionMode(    ActionMode mode,    Menu menu){
      return false;
    }
    @Override public boolean onActionItemClicked(    ActionMode mode,    MenuItem item){
      int id=item.getItemId();
switch (id) {
case R.id.show_add_fav:
        TvShowDatabaseUtils.setTvShowsFavourite(mContext,mAdapter.getCheckedShows(),true);
      break;
case R.id.show_remove_fav:
    TvShowDatabaseUtils.setTvShowsFavourite(mContext,mAdapter.getCheckedShows(),false);
  break;
case R.id.show_watched:
TvShowDatabaseUtils.setTvShowsWatched(mContext,mAdapter.getCheckedShows(),true);
break;
case R.id.show_unwatched:
TvShowDatabaseUtils.setTvShowsWatched(mContext,mAdapter.getCheckedShows(),false);
break;
}
if (!(id == R.id.watched_menu || id == R.id.favorite_menu)) {
mode.finish();
LocalBroadcastUtils.updateTvShowLibrary(mContext);
}
return true;
}
@Override public void onDestroyActionMode(ActionMode mode){
mAdapter.clearCheckedItems();
}
}
);
mTvShowLoader=new TvShowLoader(mContext,TvShowLibraryType.fromInt(getArguments().getInt("type")),mCallback);
mTvShowLoader.setIgnorePrefixes(mIgnorePrefixes);
mTvShowLoader.load();
showProgressBar();
return v;
}
