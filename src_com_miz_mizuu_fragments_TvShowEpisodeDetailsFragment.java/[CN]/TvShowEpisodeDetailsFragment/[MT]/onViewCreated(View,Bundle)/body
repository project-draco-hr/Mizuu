{
  super.onViewCreated(view,savedInstanceState);
  mBackdrop=(ImageView)view.findViewById(R.id.imageBackground);
  mEpisodePhoto=(ImageView)view.findViewById(R.id.episodePhoto);
  mTitle=(TextView)view.findViewById(R.id.movieTitle);
  mSeasonEpisodeNumber=(TextView)view.findViewById(R.id.textView7);
  mDescription=(TextView)view.findViewById(R.id.textView2);
  mFileSource=(TextView)view.findViewById(R.id.textView3);
  mAirDate=(TextView)view.findViewById(R.id.textReleaseDate);
  mRating=(TextView)view.findViewById(R.id.textView12);
  mDirector=(TextView)view.findViewById(R.id.director);
  mWriter=(TextView)view.findViewById(R.id.writer);
  mGuestStars=(TextView)view.findViewById(R.id.guest_stars);
  if (MizLib.isPortrait(getActivity())) {
    final boolean fullscreen=MizuuApplication.isFullscreen(getActivity());
    final int height=fullscreen ? MizLib.getActionBarHeight(getActivity()) : MizLib.getActionBarAndStatusBarHeight(getActivity());
    ObservableScrollView sv=(ObservableScrollView)view.findViewById(R.id.scrollView1);
    sv.setOnScrollChangedListener(new OnScrollChangedListener(){
      @Override public void onScrollChanged(      ScrollView who,      int l,      int t,      int oldl,      int oldt){
        final int headerHeight=mEpisodePhoto.getHeight() - height;
        final float ratio=(float)Math.min(Math.max(t,0),headerHeight) / headerHeight;
        final int newAlpha=(int)(ratio * 255);
        if (t <= headerHeight * 1.2) {
          mBus.post(Integer.valueOf(newAlpha));
          mEpisodePhoto.setPadding(0,(int)(t / 1.5),0,0);
        }
      }
    }
);
  }
 else {
    if (!MizuuApplication.isFullscreen(getActivity()))     MizLib.addActionBarAndStatusBarMargin(getActivity(),view.findViewById(R.id.episode_relative_layout));
 else     MizLib.addActionBarMargin(getActivity(),view.findViewById(R.id.episode_relative_layout));
  }
  mTitle.setVisibility(View.VISIBLE);
  mTitle.setText(mEpisode.getTitle());
  mTitle.setTypeface(MizuuApplication.getOrCreateTypeface(getActivity(),"RobotoCondensed-Regular.ttf"));
  mTitle.setLayerType(View.LAYER_TYPE_SOFTWARE,null);
  mDescription.setTypeface(mLight);
  mFileSource.setTypeface(mLight);
  mDirector.setTypeface(mLight);
  mWriter.setTypeface(mLight);
  mGuestStars.setTypeface(mLight);
  if (MizLib.isPortrait(getActivity())) {
    mAirDate.setTypeface(mMedium);
    mRating.setTypeface(mMedium);
    mSeasonEpisodeNumber.setTypeface(mLightItalic);
    mSeasonEpisodeNumber.setText(getString(R.string.showSeason) + " " + mEpisode.getSeason()+ ", "+ getString(R.string.showEpisode)+ " "+ mEpisode.getEpisode());
  }
 else {
    mAirDate.setTypeface(mLight);
    mRating.setTypeface(mLight);
  }
  mDescription.setBackgroundResource(R.drawable.selectable_background);
  mDescription.setMaxLines(getActivity().getResources().getInteger(R.integer.episode_details_max_lines));
  mDescription.setTag(true);
  mDescription.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      if (((Boolean)mDescription.getTag())) {
        mDescription.setMaxLines(1000);
        mDescription.setTag(false);
      }
 else {
        mDescription.setMaxLines(getActivity().getResources().getInteger(R.integer.episode_details_max_lines));
        mDescription.setTag(true);
      }
    }
  }
);
  mDescription.setEllipsize(TextUtils.TruncateAt.END);
  mDescription.setFocusable(true);
  mDescription.setText(mEpisode.getDescription());
  mFileSource.setText(mEpisode.getFilepath());
  mAirDate.setText(MizLib.getPrettyDatePrecise(getActivity(),mEpisode.getReleasedate()));
  if (!mEpisode.getRating().equals("0.0/10")) {
    if (mEpisode.getRating().contains("/")) {
      try {
        int rating=(int)(Double.parseDouble(mEpisode.getRating().substring(0,mEpisode.getRating().indexOf("/"))) * 10);
        mRating.setText(Html.fromHtml(rating + "<small> %</small>"));
      }
 catch (      NumberFormatException e) {
        mRating.setText(Html.fromHtml(mEpisode.getRating().replace("/","<small> / ") + "</small>"));
      }
    }
 else {
      mRating.setText(mEpisode.getRating());
    }
  }
 else {
    mRating.setText(R.string.stringNA);
  }
  if (MizLib.isEmpty(mEpisode.getDirector()) || mEpisode.getDirector().equals(getString(R.string.stringNA))) {
    mDirector.setVisibility(View.GONE);
  }
 else {
    mDirector.setText(mEpisode.getDirector());
  }
  if (MizLib.isEmpty(mEpisode.getWriter()) || mEpisode.getWriter().equals(getString(R.string.stringNA))) {
    mWriter.setVisibility(View.GONE);
  }
 else {
    mWriter.setText(mEpisode.getWriter());
  }
  if (MizLib.isEmpty(mEpisode.getGuestStars()) || mEpisode.getGuestStars().equals(getString(R.string.stringNA))) {
    mGuestStars.setVisibility(View.GONE);
  }
 else {
    mGuestStars.setText(mEpisode.getGuestStars());
  }
  mPicasso.load(mEpisode.getEpisodePhoto()).placeholder(R.drawable.bg).config(MizuuApplication.getBitmapConfig()).into(mEpisodePhoto,new Callback(){
    @Override public void onError(){
      int width=getActivity().getResources().getDimensionPixelSize(R.dimen.episode_details_background_overlay_width);
      int height=getActivity().getResources().getDimensionPixelSize(R.dimen.episode_details_background_overlay_height);
      mPicasso.load(mEpisode.getTvShowBackdrop()).placeholder(R.drawable.bg).error(R.drawable.nobackdrop).resize(width,height).config(MizuuApplication.getBitmapConfig()).into(mEpisodePhoto,new Callback(){
        @Override public void onError(){
          setPanning(false);
        }
        @Override public void onSuccess(){
          setPanning(true);
        }
      }
);
    }
    @Override public void onSuccess(){
      setPanning(true);
    }
  }
);
  if (!MizLib.isPortrait(getActivity()))   mPicasso.load(mEpisode.getEpisodePhoto()).placeholder(R.drawable.bg).error(R.drawable.bg).transform(new BlurTransformation(getActivity().getApplicationContext(),mEpisode.getEpisodePhoto().getAbsolutePath() + "-blur",4)).config(MizuuApplication.getBitmapConfig()).into(mBackdrop,new Callback(){
    @Override public void onError(){
      mPicasso.load(mEpisode.getTvShowBackdrop()).placeholder(R.drawable.bg).error(R.drawable.nobackdrop).transform(new BlurTransformation(getActivity().getApplicationContext(),mEpisode.getTvShowBackdrop().getAbsolutePath() + "-blur",4)).config(MizuuApplication.getBitmapConfig()).config(MizuuApplication.getBitmapConfig()).into(mBackdrop,new Callback(){
        @Override public void onError(){
        }
        @Override public void onSuccess(){
          mBackdrop.setColorFilter(Color.parseColor("#aa181818"),android.graphics.PorterDuff.Mode.SRC_OVER);
        }
      }
);
    }
    @Override public void onSuccess(){
      mBackdrop.setColorFilter(Color.parseColor("#aa181818"),android.graphics.PorterDuff.Mode.SRC_OVER);
    }
  }
);
}
