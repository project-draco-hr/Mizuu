{
  if (!MizLib.isWifiConnected(getActivity(),mDisableEthernetWiFiCheck)) {
    Toast.makeText(getActivity(),getString(R.string.noConnection),Toast.LENGTH_LONG).show();
    return;
  }
  int bufferSize;
  String buff=PreferenceManager.getDefaultSharedPreferences(getActivity()).getString(BUFFER_SIZE,getString(R.string._16kb));
  if (buff.equals(getString(R.string._16kb)))   bufferSize=8192 * 2;
 else   bufferSize=8192;
  final Streamer s=Streamer.getInstance();
  if (s != null)   s.setBufferSize(bufferSize);
 else {
    Toast.makeText(getActivity(),getString(R.string.errorOccured),Toast.LENGTH_SHORT).show();
    return;
  }
  final NtlmPasswordAuthentication auth=MizLib.getAuthFromFilepath(MizLib.TYPE_SHOWS,mEpisode.getFilepath());
  new Thread(){
    public void run(){
      try {
        final SmbFile file=new SmbFile(MizLib.createSmbLoginString(URLEncoder.encode(auth.getDomain(),"utf-8"),URLEncoder.encode(auth.getUsername(),"utf-8"),URLEncoder.encode(auth.getPassword(),"utf-8"),mEpisode.getFilepath(),false));
        s.setStreamSrc(file,MizLib.getSubtitleFiles(mEpisode.getFilepath(),auth));
        getActivity().runOnUiThread(new Runnable(){
          public void run(){
            try {
              Uri uri=Uri.parse(Streamer.URL + Uri.fromFile(new File(Uri.parse(mEpisode.getFilepath()).getPath())).getEncodedPath());
              startActivity(MizLib.getVideoIntent(uri,mVideoWildcard,mEpisode));
              checkIn();
            }
 catch (            Exception e) {
              try {
                Uri uri=Uri.parse(Streamer.URL + Uri.fromFile(new File(Uri.parse(mEpisode.getFilepath()).getPath())).getEncodedPath());
                startActivity(MizLib.getVideoIntent(uri,"video/*",mEpisode));
                checkIn();
              }
 catch (              Exception e2) {
                Toast.makeText(getActivity(),getString(R.string.noVideoPlayerFound),Toast.LENGTH_LONG).show();
              }
            }
          }
        }
);
      }
 catch (      MalformedURLException e) {
      }
catch (      UnsupportedEncodingException e1) {
      }
    }
  }
.start();
}
