{
  super.onCreate(savedInstanceState);
  int res=getActivity().getResources().getIdentifier(getArguments().getString("resource"),"xml",getActivity().getPackageName());
  addPreferencesFromResource(res);
  PreferenceManager.getDefaultSharedPreferences(getActivity()).registerOnSharedPreferenceChangeListener(this);
  mPref=getPreferenceScreen().findPreference("prefsIgnoredFiles");
  if (mPref != null)   mPref.setEnabled(PreferenceManager.getDefaultSharedPreferences(getActivity()).getBoolean(IGNORED_FILES_ENABLED,false));
  mCopyDatabase=getPreferenceScreen().findPreference("prefsCopyDatabase");
  if (mCopyDatabase != null)   mCopyDatabase.setOnPreferenceClickListener(new OnPreferenceClickListener(){
    @Override public boolean onPreferenceClick(    Preference preference){
      try {
        File newPath=new File(MizuuApplication.getAppFolder(getActivity()),"database.db");
        newPath.createNewFile();
        FileUtils.copyFile(FileUtils.getDatabaseFile(getActivity()),newPath);
        Toast.makeText(getActivity(),getString(R.string.database_copied) + "\n(" + newPath.getAbsolutePath()+ ")",Toast.LENGTH_LONG).show();
      }
 catch (      IOException e) {
        Toast.makeText(getActivity(),R.string.errorSomethingWentWrong,Toast.LENGTH_SHORT).show();
        e.printStackTrace();
      }
      return true;
    }
  }
);
  mIgnoreNfoFiles=getPreferenceScreen().findPreference(PreferenceKeys.IGNORED_NFO_FILES);
  if (mIgnoreNfoFiles != null)   mIgnoreNfoFiles.setOnPreferenceChangeListener(new Preference.OnPreferenceChangeListener(){
    @Override public boolean onPreferenceChange(    Preference preference,    Object newValue){
      MizuuApplication.clearLruCache(getActivity());
      LocalBroadcastUtils.updateMovieLibrary(getActivity());
      return true;
    }
  }
);
  mLanguagePref=getPreferenceScreen().findPreference(LANGUAGE_PREFERENCE);
  if (mLanguagePref != null)   mLanguagePref.setOnPreferenceClickListener(new OnPreferenceClickListener(){
    @Override public boolean onPreferenceClick(    Preference preference){
      mSystemLocales=Locale.getAvailableLocales();
      String[] languageCodes=Locale.getISOLanguages();
      final ArrayList<Locale> mTemp=new ArrayList<Locale>();
      for (      String code : languageCodes) {
        if (code.length() == 2) {
          Locale l=new Locale(code);
          if (hasLocale(l))           mTemp.add(l);
        }
      }
      Collections.sort(mTemp,new Comparator<Locale>(){
        @Override public int compare(        Locale lhs,        Locale rhs){
          return lhs.getDisplayLanguage(Locale.getDefault()).compareToIgnoreCase(rhs.getDisplayLanguage(Locale.getDefault()));
        }
      }
);
      String[] items=new String[mTemp.size()];
      for (int i=0; i < mTemp.size(); i++)       items[i]=mTemp.get(i).getDisplayLanguage(Locale.getDefault());
      final String[] codes=new String[mTemp.size()];
      for (int i=0; i < mTemp.size(); i++)       codes[i]=mTemp.get(i).getLanguage();
      mTemp.clear();
      int checkedItem=getIndexForLocale(codes,PreferenceManager.getDefaultSharedPreferences(getActivity()).getString(LANGUAGE_PREFERENCE,"en"));
      if (checkedItem == -1)       checkedItem=getIndexForLocale(codes,"en");
      AlertDialog.Builder bldr=new AlertDialog.Builder(getActivity());
      bldr.setTitle(R.string.set_pref_language_title);
      bldr.setSingleChoiceItems(items,checkedItem,new OnClickListener(){
        @Override public void onClick(        DialogInterface dialog,        int which){
          savePreference(LANGUAGE_PREFERENCE,codes[which]);
          dialog.dismiss();
        }
      }
);
      bldr.show();
      return true;
    }
  }
);
}
