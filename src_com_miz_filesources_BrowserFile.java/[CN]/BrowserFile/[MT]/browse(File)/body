{
  List<BrowserFileObject> list=new ArrayList<BrowserFileObject>();
  List<File> orderedArray=new ArrayList<File>();
  List<File> temp=new ArrayList<File>();
  try {
    File[] listFiles=folder.listFiles();
    if (listFiles == null)     return false;
    for (    File f : listFiles)     orderedArray.add(f);
    Collections.sort(orderedArray,new Comparator<File>(){
      @Override public int compare(      File f1,      File f2){
        try {
          if (f1.isDirectory() && !f2.isDirectory()) {
            return -1;
          }
 else           if (!f1.isDirectory() && f2.isDirectory()) {
            return 1;
          }
        }
 catch (        Exception ignored) {
        }
        return f1.getName().toLowerCase(Locale.getDefault()).compareTo(f2.getName().toLowerCase(Locale.getDefault()));
      }
    }
);
    for (    File f : orderedArray)     if (MizLib.isValidFilename(f.getName())) {
      list.add(new BrowserFileObject(f.getName(),f.isDirectory(),f.isDirectory() ? 0 : f.length()));
      temp.add(f);
    }
    listFiles=temp.toArray(new File[temp.size()]);
    temp.clear();
    orderedArray.clear();
    if (folder.getAbsolutePath().equals("/"))     setParentFolder(null);
 else     setParentFolder(new File(folder.getParent()));
    setCurrentFolder(folder);
    setCurrentFiles(listFiles);
    setBrowserFiles(list);
  }
 catch (  Exception e) {
    Log.d("Mizuu",e.toString());
    return false;
  }
  return browseParent();
}
