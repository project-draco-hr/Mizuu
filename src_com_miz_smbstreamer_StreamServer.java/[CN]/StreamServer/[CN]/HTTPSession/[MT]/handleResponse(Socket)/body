{
  try {
    is=socket.getInputStream();
    if (is == null)     return;
    byte[] buf=new byte[mBufferSize];
    int rlen=is.read(buf,0,mBufferSize);
    if (rlen <= 0)     return;
    ByteArrayInputStream hbis=new ByteArrayInputStream(buf,0,rlen);
    BufferedReader hin=new BufferedReader(new InputStreamReader(hbis,"utf-8"),mBufferSize);
    Properties pre=new Properties();
    Properties params=new Properties();
    Properties header=new Properties();
    Properties files=new Properties();
    decodeHeader(hin,pre,params,header);
    Log.d("Streamer",pre.toString());
    Log.d("Streamer","Params: " + params.toString());
    Log.d("Streamer","Header: " + header.toString());
    String method=pre.getProperty("method");
    String uri=pre.getProperty("uri");
    Response r=serve(uri,method,header,params,files);
    if (r == null)     sendError(socket,HTTP_INTERNALERROR,"SERVER INTERNAL ERROR: Serve() returned a null response.");
 else     sendResponse(socket,r.status,r.mimeType,r.header,r.data);
  }
 catch (  IOException ioe) {
    try {
      sendError(socket,HTTP_INTERNALERROR,"SERVER INTERNAL ERROR: IOException: " + ioe.getMessage());
    }
 catch (    Throwable t) {
    }
  }
catch (  InterruptedException ie) {
  }
}
