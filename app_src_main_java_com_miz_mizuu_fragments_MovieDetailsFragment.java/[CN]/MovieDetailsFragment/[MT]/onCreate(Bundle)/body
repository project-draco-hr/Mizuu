{
  super.onCreate(savedInstanceState);
  setHasOptionsMenu(true);
  setRetainInstance(true);
  mContext=getActivity();
  mIgnorePrefixes=PreferenceManager.getDefaultSharedPreferences(mContext).getBoolean(IGNORED_TITLE_PREFIXES,false);
  mShowFileLocation=PreferenceManager.getDefaultSharedPreferences(mContext).getBoolean(SHOW_FILE_LOCATION,true);
  mRemoveMoviesFromWatchlist=PreferenceManager.getDefaultSharedPreferences(mContext).getBoolean(REMOVE_MOVIES_FROM_WATCHLIST,true);
  mLight=TypefaceUtils.getRobotoLight(mContext);
  mMediumItalic=TypefaceUtils.getRobotoMediumItalic(mContext);
  mMedium=TypefaceUtils.getRobotoMedium(mContext);
  mBold=TypefaceUtils.getRobotoBold(mContext);
  mCondensedRegular=TypefaceUtils.getRobotoCondensedRegular(mContext);
  mPicasso=MizuuApplication.getPicassoDetailsView(mContext);
  mDatabase=MizuuApplication.getMovieAdapter();
  Cursor cursor=mDatabase.fetchMovie(getArguments().getString("tmdbId"));
  try {
    mMovie=new Movie(mContext,cursor.getString(cursor.getColumnIndex(DbAdapterMovies.KEY_TITLE)),cursor.getString(cursor.getColumnIndex(DbAdapterMovies.KEY_PLOT)),cursor.getString(cursor.getColumnIndex(DbAdapterMovies.KEY_TAGLINE)),cursor.getString(cursor.getColumnIndex(DbAdapterMovies.KEY_TMDB_ID)),cursor.getString(cursor.getColumnIndex(DbAdapterMovies.KEY_IMDB_ID)),cursor.getString(cursor.getColumnIndex(DbAdapterMovies.KEY_RATING)),cursor.getString(cursor.getColumnIndex(DbAdapterMovies.KEY_RELEASEDATE)),cursor.getString(cursor.getColumnIndex(DbAdapterMovies.KEY_CERTIFICATION)),cursor.getString(cursor.getColumnIndex(DbAdapterMovies.KEY_RUNTIME)),cursor.getString(cursor.getColumnIndex(DbAdapterMovies.KEY_TRAILER)),cursor.getString(cursor.getColumnIndex(DbAdapterMovies.KEY_GENRES)),cursor.getString(cursor.getColumnIndex(DbAdapterMovies.KEY_FAVOURITE)),cursor.getString(cursor.getColumnIndex(DbAdapterMovies.KEY_ACTORS)),MizuuApplication.getCollectionsAdapter().getCollection(cursor.getString(cursor.getColumnIndex(DbAdapterMovies.KEY_COLLECTION_ID))),cursor.getString(cursor.getColumnIndex(DbAdapterMovies.KEY_COLLECTION_ID)),cursor.getString(cursor.getColumnIndex(DbAdapterMovies.KEY_TO_WATCH)),cursor.getString(cursor.getColumnIndex(DbAdapterMovies.KEY_HAS_WATCHED)),cursor.getString(cursor.getColumnIndex(DbAdapterMovies.KEY_DATE_ADDED)),mIgnorePrefixes);
  }
 catch (  Exception e) {
  }
 finally {
    if (cursor != null) {
      cursor.close();
    }
 else {
      getActivity().finish();
      return;
    }
  }
  LocalBroadcastManager.getInstance(mContext).registerReceiver(mMessageReceiver,new IntentFilter(LocalBroadcastUtils.CLEAR_IMAGE_CACHE));
}
