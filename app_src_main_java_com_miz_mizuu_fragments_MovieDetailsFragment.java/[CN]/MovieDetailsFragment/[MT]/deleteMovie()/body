{
  AlertDialog.Builder builder=new AlertDialog.Builder(mContext);
  View dialogLayout=LayoutInflater.from(mContext).inflate(R.layout.delete_file_dialog_layout,null);
  final CheckBox cb=(CheckBox)dialogLayout.findViewById(R.id.deleteFile);
  if (mMovie.getFilepaths().size() == 1 && mMovie.getFilepaths().get(0).getType() == FileSource.UPNP)   cb.setEnabled(false);
 else   cb.setChecked(PreferenceManager.getDefaultSharedPreferences(mContext).getBoolean(ALWAYS_DELETE_FILE,false));
  builder.setTitle(getString(R.string.removeMovie)).setView(dialogLayout).setCancelable(false).setPositiveButton(getString(android.R.string.yes),new DialogInterface.OnClickListener(){
    public void onClick(    DialogInterface dialog,    int id){
      MovieDatabaseUtils.deleteMovie(getActivity(),mMovie.getTmdbId());
      if (cb.isChecked()) {
        for (        Filepath path : mMovie.getFilepaths()) {
          Intent deleteIntent=new Intent(mContext,DeleteFile.class);
          deleteIntent.putExtra("filepath",path.getFilepath());
          mContext.startService(deleteIntent);
        }
      }
      boolean movieExists=mDatabase.movieExists(mMovie.getTmdbId());
      if (!movieExists) {
        try {
          File coverArt=mMovie.getPoster();
          if (coverArt.exists() && coverArt.getAbsolutePath().contains("com.miz.mizuu")) {
            MizLib.deleteFile(coverArt);
          }
        }
 catch (        NullPointerException e) {
        }
        try {
          File thumbnail=mMovie.getThumbnail();
          if (thumbnail.exists() && thumbnail.getAbsolutePath().contains("com.miz.mizuu")) {
            MizLib.deleteFile(thumbnail);
          }
        }
 catch (        NullPointerException e) {
        }
        try {
          File backdrop=mMovie.getBackdrop();
          if (backdrop.exists() && backdrop.getAbsolutePath().contains("com.miz.mizuu")) {
            MizLib.deleteFile(backdrop);
          }
        }
 catch (        NullPointerException e) {
        }
      }
      notifyDatasetChanges();
      getActivity().finish();
    }
  }
).setNegativeButton(getString(android.R.string.no),new DialogInterface.OnClickListener(){
    public void onClick(    DialogInterface dialog,    int id){
      dialog.cancel();
    }
  }
).create().show();
}
