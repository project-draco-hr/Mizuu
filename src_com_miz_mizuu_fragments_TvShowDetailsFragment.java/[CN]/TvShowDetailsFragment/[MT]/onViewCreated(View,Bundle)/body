{
  super.onViewCreated(v,savedInstanceState);
  mDetailsArea=v.findViewById(R.id.details_area);
  v.findViewById(R.id.textView3).setVisibility(View.GONE);
  v.findViewById(R.id.textView6).setVisibility(View.GONE);
  if (MizLib.isPortrait(getActivity())) {
    final boolean fullscreen=MizuuApplication.isFullscreen(getActivity());
    final int height=fullscreen ? MizLib.getActionBarHeight(getActivity()) : MizLib.getActionBarAndStatusBarHeight(getActivity());
    ObservableScrollView sv=(ObservableScrollView)v.findViewById(R.id.scrollView1);
    sv.setOnScrollChangedListener(new OnScrollChangedListener(){
      @Override public void onScrollChanged(      ScrollView who,      int l,      int t,      int oldl,      int oldt){
        final int headerHeight=background.getHeight() - height;
        final float ratio=(float)Math.min(Math.max(t,0),headerHeight) / headerHeight;
        final int newAlpha=(int)(ratio * 255);
        if (t <= headerHeight * 1.2) {
          mBus.post(Integer.valueOf(newAlpha));
          background.setPadding(0,(int)(t / 1.5),0,0);
        }
      }
    }
);
  }
  background=(ImageView)v.findViewById(R.id.imageBackground);
  textTitle=(TextView)v.findViewById(R.id.movieTitle);
  textPlot=(TextView)v.findViewById(R.id.textView2);
  textGenre=(TextView)v.findViewById(R.id.textView7);
  textRuntime=(TextView)v.findViewById(R.id.textView9);
  textReleaseDate=(TextView)v.findViewById(R.id.textReleaseDate);
  textRating=(TextView)v.findViewById(R.id.textView12);
  textCertification=(TextView)v.findViewById(R.id.textView11);
  cover=(ImageView)v.findViewById(R.id.traktIcon);
  textTitle.setVisibility(View.VISIBLE);
  textTitle.setText(thisShow.getTitle());
  textTitle.setTypeface(MizuuApplication.getOrCreateTypeface(getActivity(),"RobotoCondensed-Regular.ttf"));
  textTitle.setLayerType(View.LAYER_TYPE_SOFTWARE,null);
  textPlot.setTypeface(mLight);
  textRuntime.setTypeface(mLight);
  textRating.setTypeface(mLight);
  textCertification.setTypeface(mLight);
  textRuntime.setTypeface(mMedium);
  textCertification.setTypeface(mMedium);
  textRating.setTypeface(mMedium);
  if (!MizLib.isPortrait(getActivity())) {
    textPlot.setBackgroundResource(R.drawable.selectable_background);
    textPlot.setMaxLines(getActivity().getResources().getInteger(R.integer.show_details_max_lines));
    textPlot.setTag(true);
    textPlot.setOnClickListener(new OnClickListener(){
      @Override public void onClick(      View v){
        if (((Boolean)textPlot.getTag())) {
          textPlot.setMaxLines(1000);
          textPlot.setTag(false);
        }
 else {
          textPlot.setMaxLines(getActivity().getResources().getInteger(R.integer.show_details_max_lines));
          textPlot.setTag(true);
        }
      }
    }
);
    textPlot.setEllipsize(TextUtils.TruncateAt.END);
    textPlot.setFocusable(true);
  }
 else {
    if (MizLib.isTablet(getActivity()))     textPlot.setLineSpacing(0,1.15f);
  }
  textPlot.setText(thisShow.getDescription());
  textGenre.setTypeface(mLightItalic);
  if (!TextUtils.isEmpty(thisShow.getGenres())) {
    textGenre.setText(thisShow.getGenres());
  }
 else {
    textGenre.setVisibility(View.GONE);
  }
  textRuntime.setText(MizLib.getPrettyRuntime(getActivity(),Integer.parseInt(thisShow.getRuntime())));
  textReleaseDate.setTypeface(mMedium);
  textReleaseDate.setText(MizLib.getPrettyDate(getActivity(),thisShow.getFirstAirdate()));
  if (!thisShow.getRating().equals("0.0/10")) {
    if (thisShow.getRating().contains("/")) {
      try {
        int rating=(int)(Double.parseDouble(thisShow.getRating().substring(0,thisShow.getRating().indexOf("/"))) * 10);
        textRating.setText(Html.fromHtml(rating + "<small> %</small>"));
      }
 catch (      NumberFormatException e) {
        textRating.setText(Html.fromHtml(thisShow.getRating().replace("/","<small> / ") + "</small>"));
      }
    }
 else {
      textRating.setText(thisShow.getRating());
    }
  }
 else {
    textRating.setText(R.string.stringNA);
  }
  if (!TextUtils.isEmpty(thisShow.getCertification())) {
    textCertification.setText(thisShow.getCertification());
  }
 else {
    textCertification.setText(R.string.stringNA);
  }
  loadImages();
}
