{
  if (!isAdded())   return;
  mCurrentSort=sort;
  Editor editor=mSharedPreferences.edit();
switch (mCurrentSort) {
case TITLE:
    editor.putString(SORTING_MOVIES,"sortTitle");
  break;
case RELEASE:
editor.putString(SORTING_MOVIES,"sortRelease");
break;
case RATING:
editor.putString(SORTING_MOVIES,"sortRating");
break;
case WEIGHTED_RATING:
editor.putString(SORTING_MOVIES,"sortWeightedRating");
break;
case DATE:
editor.putString(SORTING_MOVIES,"sortAdded");
break;
case DURATION:
editor.putString(SORTING_MOVIES,"sortDuration");
break;
}
editor.apply();
ArrayList<MovieSortHelper> tempHelper=new ArrayList<MovieSortHelper>();
for (int i=0; i < mMovieKeys.size(); i++) {
tempHelper.add(new MovieSortHelper(mMovies.get(mMovieKeys.get(i)),mMovieKeys.get(i),mCurrentSort,false));
}
Collections.sort(tempHelper);
mMovieKeys.clear();
for (int i=0; i < tempHelper.size(); i++) {
mMovieKeys.add(tempHelper.get(i).getIndex());
}
tempHelper.clear();
setProgressBarVisible(false);
notifyDataSetChanged();
}
