{
  showProgressBar();
  new Thread(){
    @Override public void run(){
      ArrayList<TvShow> tempShows=new ArrayList<TvShow>(shownShows);
switch (sort) {
case TITLE:
        Collections.sort(tempShows,new Comparator<TvShow>(){
          @Override public int compare(          TvShow o1,          TvShow o2){
            String s1=o1.getTitle(), s2=o2.getTitle();
            if (s1 != null && s2 != null)             return s1.compareToIgnoreCase(s2);
            return 0;
          }
        }
);
      break;
case RELEASE:
    Collections.sort(tempShows,new Comparator<TvShow>(){
      @Override public int compare(      TvShow o1,      TvShow o2){
        return o1.getFirstAirdate().compareTo(o2.getFirstAirdate()) * -1;
      }
    }
);
  break;
case RATING:
Collections.sort(tempShows,new Comparator<TvShow>(){
  @Override public int compare(  TvShow o1,  TvShow o2){
    try {
      if (o1.getRawRating() < o2.getRawRating())       return 1;
 else       if (o1.getRawRating() > o2.getRawRating())       return -1;
    }
 catch (    Exception e) {
    }
    return 0;
  }
}
);
break;
case WEIGHTED_RATING:
Collections.sort(tempShows,new Comparator<TvShow>(){
@Override public int compare(TvShow o1,TvShow o2){
try {
  if (o1.getWeightedRating() < o2.getWeightedRating()) {
    return 1;
  }
 else   if (o1.getWeightedRating() > o2.getWeightedRating())   return -1;
}
 catch (Exception e) {
}
return 0;
}
}
);
break;
case NEWEST_EPISODE:
final DbAdapterTvShowEpisode dbTvShowEpisode=MizuuApplication.getTvEpisodeDbAdapter();
Collections.sort(tempShows,new Comparator<TvShow>(){
@Override public int compare(TvShow o1,TvShow o2){
String first=dbTvShowEpisode.getLatestEpisodeAirdate(o1.getId());
String second=dbTvShowEpisode.getLatestEpisodeAirdate(o2.getId());
return first.compareTo(second) * -1;
}
}
);
break;
case DURATION:
Collections.sort(tempShows,new Comparator<TvShow>(){
@Override public int compare(TvShow o1,TvShow o2){
int first=Integer.valueOf(o1.getRuntime());
int second=Integer.valueOf(o2.getRuntime());
if (first < second) return 1;
 else if (first > second) return -1;
return 0;
}
}
);
}
shownShows=new ArrayList<TvShow>(tempShows);
tempShows.clear();
if (isAdded()) getActivity().runOnUiThread(new Runnable(){
@Override public void run(){
hideProgressBar();
notifyDataSetChanged();
}
}
);
}
}
.start();
}
