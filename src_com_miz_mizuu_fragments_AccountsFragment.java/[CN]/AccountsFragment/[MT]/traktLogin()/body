{
  new Thread(){
    @Override public void run(){
      String username=traktUser.getText().toString().trim(), password=traktPass.getText().toString().trim();
      boolean success=false;
      HttpClient httpclient=new DefaultHttpClient();
      HttpPost httppost=new HttpPost("http://api.trakt.tv/account/test/" + MizLib.TRAKT_API);
      try {
        List<NameValuePair> nameValuePairs=new ArrayList<NameValuePair>(2);
        nameValuePairs.add(new BasicNameValuePair("username",username));
        nameValuePairs.add(new BasicNameValuePair("password",MizLib.SHA1(password)));
        httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs));
        ResponseHandler<String> responseHandler=new BasicResponseHandler();
        String html=httpclient.execute(httppost,responseHandler);
        JSONObject jObject=new JSONObject(html);
        String status=jObject.getString("status");
        success=status.equals("success");
      }
 catch (      Exception e) {
        success=false;
      }
 finally {
        if (success) {
          Editor editor=settings.edit();
          editor.putString("traktUsername",username);
          editor.putString("traktPassword",MizLib.SHA1(password));
          editor.commit();
          if (isAdded())           getActivity().runOnUiThread(new Runnable(){
            @Override public void run(){
              Toast.makeText(getActivity(),getString(R.string.loginSucceeded),Toast.LENGTH_LONG).show();
              traktUser.setEnabled(false);
              traktPass.setEnabled(false);
              syncTrakt.setEnabled(true);
              traktLogIn.setEnabled(false);
              traktRemoveAccount.setEnabled(true);
              startServices();
            }
          }
);
        }
 else {
          if (isAdded())           getActivity().runOnUiThread(new Runnable(){
            @Override public void run(){
              Toast.makeText(getActivity(),getString(R.string.failedToLogin),Toast.LENGTH_LONG).show();
            }
          }
);
        }
      }
    }
  }
.start();
}
