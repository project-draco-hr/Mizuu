{
  if (isAdded() && mMovie != null) {
    textTitle.setVisibility(View.VISIBLE);
    textTitle.setText(mMovie.getTitle());
    textTitle.setTypeface(MizuuApplication.getOrCreateTypeface(getActivity(),"RobotoCondensed-Regular.ttf"));
    textTitle.setLayerType(View.LAYER_TYPE_SOFTWARE,null);
    textPlot.setTypeface(mLight);
    textReleaseDate.setTypeface(mLight);
    textRuntime.setTypeface(mMedium);
    textCertification.setTypeface(mMedium);
    textRating.setTypeface(mMedium);
    if (!MizLib.isPortrait(getActivity())) {
      textPlot.setBackgroundResource(R.drawable.selectable_background);
      if (!mMovie.getTagline().isEmpty())       textPlot.setMaxLines(getActivity().getResources().getInteger(R.integer.movie_details_max_lines));
 else       textPlot.setMaxLines(getActivity().getResources().getInteger(R.integer.show_details_max_lines));
      textPlot.setTag(true);
      textPlot.setOnClickListener(new OnClickListener(){
        @Override public void onClick(        View v){
          if (((Boolean)textPlot.getTag())) {
            textPlot.setMaxLines(1000);
            textPlot.setTag(false);
          }
 else {
            if (!mMovie.getTagline().isEmpty())             textPlot.setMaxLines(getActivity().getResources().getInteger(R.integer.movie_details_max_lines));
 else             textPlot.setMaxLines(getActivity().getResources().getInteger(R.integer.show_details_max_lines));
            textPlot.setTag(true);
          }
        }
      }
);
      textPlot.setEllipsize(TextUtils.TruncateAt.END);
      textPlot.setFocusable(true);
    }
 else {
      if (MizLib.isTablet(getActivity()))       textPlot.setLineSpacing(0,1.15f);
    }
    textPlot.setText(mMovie.getPlot());
    textTagline.setTypeface(mBoldItalic);
    if (mMovie.getTagline().equals("NOTAGLINE") || mMovie.getTagline().isEmpty())     textTagline.setVisibility(TextView.GONE);
 else     textTagline.setText(mMovie.getTagline());
    textGenre.setTypeface(mLightItalic);
    if (!TextUtils.isEmpty(mMovie.getGenres())) {
      textGenre.setText(mMovie.getGenres());
    }
 else {
      textGenre.setVisibility(View.GONE);
    }
    textRuntime.setText(MizLib.getPrettyRuntime(getActivity(),Integer.parseInt(mMovie.getRuntime())));
    textReleaseDate.setTypeface(mMedium);
    textReleaseDate.setText(MizLib.getPrettyDate(getActivity(),mMovie.getReleasedate()));
    if (!mMovie.getRating().equals("0.0")) {
      try {
        int rating=(int)(Double.parseDouble(mMovie.getRating()) * 10);
        textRating.setText(Html.fromHtml(rating + "<small> %</small>"));
      }
 catch (      NumberFormatException e) {
        textRating.setText(mMovie.getRating());
      }
    }
 else {
      textRating.setText(R.string.stringNA);
    }
    if (!TextUtils.isEmpty(mMovie.getCertification())) {
      textCertification.setText(mMovie.getCertification());
    }
 else {
      textCertification.setText(R.string.stringNA);
    }
    mActorsLayout.setTitle(R.string.detailsActors);
    mActorsLayout.setSeeMoreVisibility(true);
    mActorsLayout.getViewTreeObserver().addOnGlobalLayoutListener(new ViewTreeObserver.OnGlobalLayoutListener(){
      @Override public void onGlobalLayout(){
        if (mActorsLayout.getWidth() > 0) {
          final int numColumns=(int)Math.floor(mActorsLayout.getWidth() / (mImageThumbSize + mImageThumbSpacing));
          mImageThumbSize=(mActorsLayout.getWidth() - (numColumns * mImageThumbSpacing)) / numColumns;
          mActorsLayout.loadItems(mContext,mPicasso,numColumns,mImageThumbSize,mMovie.getActors(),HorizontalCardLayout.ACTORS);
          MizLib.removeViewTreeObserver(mActorsLayout.getViewTreeObserver(),this);
        }
      }
    }
);
    mActorsLayout.setSeeMoreOnClickListener(new OnClickListener(){
      @Override public void onClick(      View v){
        startActivity(IntentUtils.getActorBrowserMovies(mContext,mMovie.getTitle(),mMovie.getId()));
      }
    }
);
    mSimilarMoviesLayout.setVisibility(View.VISIBLE);
    mSimilarMoviesLayout.setTitle(R.string.relatedMovies);
    mSimilarMoviesLayout.setSeeMoreVisibility(true);
    mSimilarMoviesLayout.getViewTreeObserver().addOnGlobalLayoutListener(new ViewTreeObserver.OnGlobalLayoutListener(){
      @Override public void onGlobalLayout(){
        if (mSimilarMoviesLayout.getWidth() > 0) {
          final int numColumns=(int)Math.floor(mSimilarMoviesLayout.getWidth() / (mImageThumbSize + mImageThumbSpacing));
          mImageThumbSize=(mSimilarMoviesLayout.getWidth() - (numColumns * mImageThumbSpacing)) / numColumns;
          mSimilarMoviesLayout.loadItems(mContext,mPicasso,numColumns,mImageThumbSize,mMovie.getSimilarMovies(),HorizontalCardLayout.RELATED_MOVIES);
          MizLib.removeViewTreeObserver(mSimilarMoviesLayout.getViewTreeObserver(),this);
        }
      }
    }
);
    mSimilarMoviesLayout.setSeeMoreOnClickListener(new OnClickListener(){
      @Override public void onClick(      View v){
        startActivity(IntentUtils.getSimilarMovies(mContext,mMovie.getTitle(),mMovie.getId()));
      }
    }
);
    ViewUtils.updateActionBarDrawable(mContext,mActionBarOverlay,mActionBarBackgroundDrawable,mActionBar,mMovie.getTitle(),1,true,true);
    setLoading(false);
    loadImages();
  }
}
