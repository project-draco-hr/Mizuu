{
  ArrayList<MediumMovie> tempMovies=new ArrayList<MediumMovie>(shownMovies);
switch (sort) {
case TITLE:
    Collections.sort(tempMovies,new Comparator<MediumMovie>(){
      @Override public int compare(      MediumMovie o1,      MediumMovie o2){
        return o1.getTitle().compareToIgnoreCase(o2.getTitle());
      }
    }
);
  break;
case RELEASE:
Collections.sort(tempMovies,new Comparator<MediumMovie>(){
  @Override public int compare(  MediumMovie o1,  MediumMovie o2){
    int firstDate=0, secondDate=0;
    String first="", second="";
    if (o1.getReleasedate() != null)     first=o1.getReleasedate().replace("-","");
    if (!(first.equals("null") | first.isEmpty()))     firstDate=Integer.valueOf(first);
    if (o2.getReleasedate() != null)     second=o2.getReleasedate().replace("-","");
    if (!(second.equals("null") | second.isEmpty()))     secondDate=Integer.valueOf(second);
    if (firstDate < secondDate)     return 1;
 else     if (firstDate > secondDate)     return -1;
    return 0;
  }
}
);
break;
case RATING:
Collections.sort(tempMovies,new Comparator<MediumMovie>(){
@Override public int compare(MediumMovie o1,MediumMovie o2){
if (o1.getRawRating() < o2.getRawRating()) {
  return 1;
}
 else if (o1.getRawRating() > o2.getRawRating()) return -1;
return 0;
}
}
);
break;
case WEIGHTED_RATING:
Collections.sort(tempMovies,new Comparator<MediumMovie>(){
@Override public int compare(MediumMovie o1,MediumMovie o2){
if (o1.getWeightedRating() < o2.getWeightedRating()) {
return 1;
}
 else if (o1.getWeightedRating() > o2.getWeightedRating()) return -1;
return 0;
}
}
);
break;
case DATE:
Collections.sort(tempMovies,new Comparator<MediumMovie>(){
@Override public int compare(MediumMovie o1,MediumMovie o2){
return o1.getDateAdded().compareTo(o2.getDateAdded()) * -1;
}
}
);
break;
}
shownMovies=new ArrayList<MediumMovie>(tempMovies);
tempMovies.clear();
tempMovies=null;
}
