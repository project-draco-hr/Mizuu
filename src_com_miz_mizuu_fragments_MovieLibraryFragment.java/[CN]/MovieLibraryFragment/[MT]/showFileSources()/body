{
  ArrayList<FileSource> sources=new ArrayList<FileSource>();
  DbAdapterSources dbHelper=MizuuApplication.getSourcesAdapter();
  Cursor cursor=dbHelper.fetchAllMovieSources();
  while (cursor.moveToNext()) {
    sources.add(new FileSource(cursor.getLong(cursor.getColumnIndex(DbAdapterSources.KEY_ROWID)),cursor.getString(cursor.getColumnIndex(DbAdapterSources.KEY_FILEPATH)),cursor.getInt(cursor.getColumnIndex(DbAdapterSources.KEY_FILESOURCE_TYPE)),cursor.getString(cursor.getColumnIndex(DbAdapterSources.KEY_USER)),cursor.getString(cursor.getColumnIndex(DbAdapterSources.KEY_PASSWORD)),cursor.getString(cursor.getColumnIndex(DbAdapterSources.KEY_DOMAIN)),cursor.getString(cursor.getColumnIndex(DbAdapterSources.KEY_TYPE))));
  }
  cursor.close();
  final TreeMap<String,Integer> map=new TreeMap<String,Integer>();
  for (int i=0; i < mMovieKeys.size(); i++) {
    String filepath=mMovies.get(mMovieKeys.get(i)).getFilepath();
    for (int j=0; j < sources.size(); j++) {
      String source=sources.get(j).getFilepath();
      if (!MizLib.isEmpty(source) && !MizLib.isEmpty(filepath) && filepath.contains(source)) {
        if (map.containsKey(source.trim())) {
          map.put(source.trim(),map.get(source.trim()) + 1);
        }
 else {
          map.put(source.trim(),1);
        }
      }
    }
  }
  final CharSequence[] temp=setupItemArray(map,R.string.allFileSources);
  AlertDialog.Builder builder=new AlertDialog.Builder(getActivity());
  builder.setTitle(R.string.selectFileSource).setItems(temp,new DialogInterface.OnClickListener(){
    public void onClick(    DialogInterface dialog,    int which){
      handleDialogOnClick(dialog,which,FILE_SOURCES,temp);
    }
  }
);
  builder.show();
}
