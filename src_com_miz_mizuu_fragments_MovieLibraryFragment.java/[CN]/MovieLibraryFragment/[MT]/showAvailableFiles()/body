{
  new AsyncTask<Void,Void,Void>(){
    ArrayList<MediumMovie> tempMovies;
    ArrayList<FileSource> filesources;
    @Override protected void onPreExecute(){
      showProgressBar();
      shownMovies.clear();
    }
    @Override protected Void doInBackground(    Void... params){
      tempMovies=new ArrayList<MediumMovie>();
      filesources=MizLib.getFileSources(MizLib.TYPE_MOVIE,true);
      for (int i=0; i < movies.size(); i++) {
        if (movies.get(i).isNetworkFile()) {
          if (movies.get(i).hasOfflineCopy()) {
            tempMovies.add(movies.get(i));
          }
 else {
            if (MizLib.isWifiConnected(getActivity(),prefsDisableEthernetWiFiCheck)) {
              FileSource source=null;
              for (int j=0; j < filesources.size(); j++)               if (movies.get(i).getFilepath().contains(filesources.get(j).getFilepath())) {
                source=filesources.get(j);
                continue;
              }
              if (source == null)               continue;
              try {
                final SmbFile file=new SmbFile(MizLib.createSmbLoginString(URLEncoder.encode(source.getDomain(),"utf-8"),URLEncoder.encode(source.getUser(),"utf-8"),URLEncoder.encode(source.getPassword(),"utf-8"),movies.get(i).getFilepath(),false));
                if (file.exists())                 tempMovies.add(movies.get(i));
              }
 catch (              Exception e) {
              }
            }
          }
        }
 else         if (movies.get(i).isUpnpFile()) {
          if (MizLib.exists(movies.get(i).getFilepath()))           tempMovies.add(movies.get(i));
        }
 else {
          if (new File(movies.get(i).getFilepath()).exists())           tempMovies.add(movies.get(i));
        }
      }
      return null;
    }
    @Override protected void onPostExecute(    Void result){
      if (isAdded() && getActivity().getActionBar().getSelectedNavigationIndex() == 2) {
        shownMovies.addAll(tempMovies);
        tempMovies.clear();
        tempMovies=null;
        sortMovies();
        notifyDataSetChanged();
        hideProgressBar();
      }
    }
  }
.execute();
}
