{
  if (isCancelled())   return false;
switch (mPosition) {
case ALL_MOVIES:
    for (int i=0; i < mMovies.size(); i++)     if (!mMovies.get(i).isUnidentified())     mTempKeys.add(i);
  break;
case FAVORITES:
for (int i=0; i < mMovies.size(); i++) if (mMovies.get(i).isFavourite()) mTempKeys.add(i);
break;
case AVAILABLE_FILES:
ArrayList<FileSource> filesources=MizLib.getFileSources(MizLib.TYPE_MOVIE,true);
for (int i=0; i < mMovies.size(); i++) {
if (isCancelled()) return false;
for (Filepath path : mMovies.get(i).getFilepaths()) {
if (path.isNetworkFile()) if (mMovies.get(i).hasOfflineCopy(path)) {
mTempKeys.add(i);
break;
}
 else {
if (path.getType() == FileSource.SMB) {
  if (MizLib.isWifiConnected(getActivity())) {
    FileSource source=null;
    for (int j=0; j < filesources.size(); j++)     if (path.getFilepath().contains(filesources.get(j).getFilepath())) {
      source=filesources.get(j);
      continue;
    }
    if (source == null)     continue;
    try {
      final SmbFile file=new SmbFile(MizLib.createSmbLoginString(URLEncoder.encode(source.getDomain(),"utf-8"),URLEncoder.encode(source.getUser(),"utf-8"),URLEncoder.encode(source.getPassword(),"utf-8"),path.getFilepath(),false));
      if (file.exists()) {
        mTempKeys.add(i);
        break;
      }
    }
 catch (    Exception e) {
    }
  }
}
 else if (path.getType() == FileSource.UPNP) {
  if (MizLib.exists(path.getFilepath())) {
    mTempKeys.add(i);
    break;
  }
}
}
 else {
if (new File(path.getFilepath()).exists()) {
  mTempKeys.add(i);
  break;
}
}
}
}
break;
case COLLECTIONS:
HashMap<String,MediumMovie> map=new HashMap<String,MediumMovie>();
for (int i=0; i < mMovies.size(); i++) if (!TextUtils.isEmpty(mMovies.get(i).getCollection()) && !mMovies.get(i).getCollection().equals("null")) if (!map.containsKey(mMovies.get(i).getCollection())) {
map.put(mMovies.get(i).getCollection(),mMovies.get(i));
mTempKeys.add(i);
}
map.clear();
break;
case WATCHED_MOVIES:
for (int i=0; i < mMovies.size(); i++) if (mMovies.get(i).hasWatched()) mTempKeys.add(i);
break;
case UNWATCHED_MOVIES:
for (int i=0; i < mMovies.size(); i++) if (!mMovies.get(i).hasWatched()) mTempKeys.add(i);
break;
case OFFLINE_COPIES:
File offlineFolder=MizuuApplication.getAvailableOfflineFolder(getActivity());
if (offlineFolder != null && offlineFolder.listFiles().length == 0) return true;
for (int i=0; i < mMovies.size(); i++) {
if (isCancelled()) return false;
for (Filepath path : mMovies.get(i).getFilepaths()) if (mMovies.get(i).hasOfflineCopy(path)) {
mTempKeys.add(i);
break;
}
}
break;
}
return true;
}
