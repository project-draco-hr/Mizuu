{
  super.onCreate(savedInstanceState);
  setContentView(R.layout.viewpager);
  setTitle(R.string.calendar);
  SharedPreferences settings=PreferenceManager.getDefaultSharedPreferences(this);
  confirmExit=settings.getBoolean("prefsConfirmBackPress",false);
  startup=settings.getString("prefsStartup","1");
  awesomePager=(ViewPager)findViewById(R.id.awesomepager);
  awesomePager.setAdapter(new WebVideosAdapter(getSupportFragmentManager()));
  setBehindContentView(R.layout.frame);
  FragmentTransaction t=getSupportFragmentManager().beginTransaction();
  t.replace(R.id.frame,MenuListFragment.newInstance(5));
  t.commit();
  this.setSlidingActionBarEnabled(true);
  getSlidingMenu().setShadowWidthRes(R.dimen.shadow_width);
  getSlidingMenu().setShadowDrawable(R.drawable.drawer_shadow);
  getSlidingMenu().setBehindOffsetRes(R.dimen.actionbar_home_width);
  getSlidingMenu().setBehindScrollScale(0.25f);
  getSlidingMenu().setBehindWidth(MizLib.getMenuWidth(this));
  getSlidingMenu().setOnOpenListener(new OnOpenListener(){
    @Override public void onOpen(){
      getActionBar().setDisplayHomeAsUpEnabled(false);
    }
  }
);
  getSlidingMenu().setOnCloseListener(new OnCloseListener(){
    @Override public void onClose(){
      getActionBar().setDisplayHomeAsUpEnabled(true);
    }
  }
);
  final ActionBar bar=getActionBar();
  bar.setNavigationMode(ActionBar.NAVIGATION_MODE_TABS);
  bar.addTab(bar.newTab().setText(getString(R.string.upcomingEpisodes)).setTabListener(this));
  bar.addTab(bar.newTab().setText(getString(R.string.chooserTVShows)).setTabListener(this));
  awesomePager.setOnPageChangeListener(new ViewPager.SimpleOnPageChangeListener(){
    @Override public void onPageSelected(    int position){
      bar.getTabAt(position).select();
      ViewParent root=findViewById(android.R.id.content).getParent();
      MizLib.findAndUpdateSpinner(root,position);
    }
  }
);
  if (savedInstanceState != null) {
    bar.setSelectedNavigationItem(savedInstanceState.getInt("tab",0));
  }
}
